/*
 * Stroom API
 * Various APIs for interacting with Stroom and its data
 *
 * OpenAPI spec version: v1/v2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.ResourceKey;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * UploadDataRequest
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-05-13T17:13:49.037+01:00[Europe/London]")
public class UploadDataRequest {
  @SerializedName("effectiveMs")
  private Long effectiveMs = null;

  @SerializedName("feedName")
  private String feedName = null;

  @SerializedName("fileName")
  private String fileName = null;

  @SerializedName("key")
  private ResourceKey key = null;

  @SerializedName("metaData")
  private String metaData = null;

  @SerializedName("streamTypeName")
  private String streamTypeName = null;

  public UploadDataRequest effectiveMs(Long effectiveMs) {
    this.effectiveMs = effectiveMs;
    return this;
  }

   /**
   * Get effectiveMs
   * @return effectiveMs
  **/
  @Schema(description = "")
  public Long getEffectiveMs() {
    return effectiveMs;
  }

  public void setEffectiveMs(Long effectiveMs) {
    this.effectiveMs = effectiveMs;
  }

  public UploadDataRequest feedName(String feedName) {
    this.feedName = feedName;
    return this;
  }

   /**
   * Get feedName
   * @return feedName
  **/
  @Schema(description = "")
  public String getFeedName() {
    return feedName;
  }

  public void setFeedName(String feedName) {
    this.feedName = feedName;
  }

  public UploadDataRequest fileName(String fileName) {
    this.fileName = fileName;
    return this;
  }

   /**
   * Get fileName
   * @return fileName
  **/
  @Schema(description = "")
  public String getFileName() {
    return fileName;
  }

  public void setFileName(String fileName) {
    this.fileName = fileName;
  }

  public UploadDataRequest key(ResourceKey key) {
    this.key = key;
    return this;
  }

   /**
   * Get key
   * @return key
  **/
  @Schema(description = "")
  public ResourceKey getKey() {
    return key;
  }

  public void setKey(ResourceKey key) {
    this.key = key;
  }

  public UploadDataRequest metaData(String metaData) {
    this.metaData = metaData;
    return this;
  }

   /**
   * Get metaData
   * @return metaData
  **/
  @Schema(description = "")
  public String getMetaData() {
    return metaData;
  }

  public void setMetaData(String metaData) {
    this.metaData = metaData;
  }

  public UploadDataRequest streamTypeName(String streamTypeName) {
    this.streamTypeName = streamTypeName;
    return this;
  }

   /**
   * Get streamTypeName
   * @return streamTypeName
  **/
  @Schema(description = "")
  public String getStreamTypeName() {
    return streamTypeName;
  }

  public void setStreamTypeName(String streamTypeName) {
    this.streamTypeName = streamTypeName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UploadDataRequest uploadDataRequest = (UploadDataRequest) o;
    return Objects.equals(this.effectiveMs, uploadDataRequest.effectiveMs) &&
        Objects.equals(this.feedName, uploadDataRequest.feedName) &&
        Objects.equals(this.fileName, uploadDataRequest.fileName) &&
        Objects.equals(this.key, uploadDataRequest.key) &&
        Objects.equals(this.metaData, uploadDataRequest.metaData) &&
        Objects.equals(this.streamTypeName, uploadDataRequest.streamTypeName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(effectiveMs, feedName, fileName, key, metaData, streamTypeName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UploadDataRequest {\n");
    
    sb.append("    effectiveMs: ").append(toIndentedString(effectiveMs)).append("\n");
    sb.append("    feedName: ").append(toIndentedString(feedName)).append("\n");
    sb.append("    fileName: ").append(toIndentedString(fileName)).append("\n");
    sb.append("    key: ").append(toIndentedString(key)).append("\n");
    sb.append("    metaData: ").append(toIndentedString(metaData)).append("\n");
    sb.append("    streamTypeName: ").append(toIndentedString(streamTypeName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
