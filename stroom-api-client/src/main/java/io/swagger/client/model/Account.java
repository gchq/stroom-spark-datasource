/*
 * Stroom API
 * Various APIs for interacting with Stroom and its data
 *
 * OpenAPI spec version: v1/v2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Account
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-05-13T17:13:49.037+01:00[Europe/London]")
public class Account {
  @SerializedName("comments")
  private String comments = null;

  @SerializedName("createTimeMs")
  private Long createTimeMs = null;

  @SerializedName("createUser")
  private String createUser = null;

  @SerializedName("email")
  private String email = null;

  @SerializedName("enabled")
  private Boolean enabled = null;

  @SerializedName("firstName")
  private String firstName = null;

  @SerializedName("forcePasswordChange")
  private Boolean forcePasswordChange = null;

  @SerializedName("id")
  private Integer id = null;

  @SerializedName("inactive")
  private Boolean inactive = null;

  @SerializedName("lastLoginMs")
  private Long lastLoginMs = null;

  @SerializedName("lastName")
  private String lastName = null;

  @SerializedName("locked")
  private Boolean locked = null;

  @SerializedName("loginCount")
  private Integer loginCount = null;

  @SerializedName("loginFailures")
  private Integer loginFailures = null;

  @SerializedName("neverExpires")
  private Boolean neverExpires = null;

  @SerializedName("processingAccount")
  private Boolean processingAccount = null;

  @SerializedName("reactivatedMs")
  private Long reactivatedMs = null;

  @SerializedName("updateTimeMs")
  private Long updateTimeMs = null;

  @SerializedName("updateUser")
  private String updateUser = null;

  @SerializedName("userId")
  private String userId = null;

  @SerializedName("version")
  private Integer version = null;

  public Account comments(String comments) {
    this.comments = comments;
    return this;
  }

   /**
   * Get comments
   * @return comments
  **/
  @Schema(description = "")
  public String getComments() {
    return comments;
  }

  public void setComments(String comments) {
    this.comments = comments;
  }

  public Account createTimeMs(Long createTimeMs) {
    this.createTimeMs = createTimeMs;
    return this;
  }

   /**
   * Get createTimeMs
   * @return createTimeMs
  **/
  @Schema(description = "")
  public Long getCreateTimeMs() {
    return createTimeMs;
  }

  public void setCreateTimeMs(Long createTimeMs) {
    this.createTimeMs = createTimeMs;
  }

  public Account createUser(String createUser) {
    this.createUser = createUser;
    return this;
  }

   /**
   * Get createUser
   * @return createUser
  **/
  @Schema(description = "")
  public String getCreateUser() {
    return createUser;
  }

  public void setCreateUser(String createUser) {
    this.createUser = createUser;
  }

  public Account email(String email) {
    this.email = email;
    return this;
  }

   /**
   * Get email
   * @return email
  **/
  @Schema(description = "")
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }

  public Account enabled(Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

   /**
   * Get enabled
   * @return enabled
  **/
  @Schema(description = "")
  public Boolean isEnabled() {
    return enabled;
  }

  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }

  public Account firstName(String firstName) {
    this.firstName = firstName;
    return this;
  }

   /**
   * Get firstName
   * @return firstName
  **/
  @Schema(description = "")
  public String getFirstName() {
    return firstName;
  }

  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }

  public Account forcePasswordChange(Boolean forcePasswordChange) {
    this.forcePasswordChange = forcePasswordChange;
    return this;
  }

   /**
   * Get forcePasswordChange
   * @return forcePasswordChange
  **/
  @Schema(description = "")
  public Boolean isForcePasswordChange() {
    return forcePasswordChange;
  }

  public void setForcePasswordChange(Boolean forcePasswordChange) {
    this.forcePasswordChange = forcePasswordChange;
  }

  public Account id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public Account inactive(Boolean inactive) {
    this.inactive = inactive;
    return this;
  }

   /**
   * Get inactive
   * @return inactive
  **/
  @Schema(description = "")
  public Boolean isInactive() {
    return inactive;
  }

  public void setInactive(Boolean inactive) {
    this.inactive = inactive;
  }

  public Account lastLoginMs(Long lastLoginMs) {
    this.lastLoginMs = lastLoginMs;
    return this;
  }

   /**
   * Get lastLoginMs
   * @return lastLoginMs
  **/
  @Schema(description = "")
  public Long getLastLoginMs() {
    return lastLoginMs;
  }

  public void setLastLoginMs(Long lastLoginMs) {
    this.lastLoginMs = lastLoginMs;
  }

  public Account lastName(String lastName) {
    this.lastName = lastName;
    return this;
  }

   /**
   * Get lastName
   * @return lastName
  **/
  @Schema(description = "")
  public String getLastName() {
    return lastName;
  }

  public void setLastName(String lastName) {
    this.lastName = lastName;
  }

  public Account locked(Boolean locked) {
    this.locked = locked;
    return this;
  }

   /**
   * Get locked
   * @return locked
  **/
  @Schema(description = "")
  public Boolean isLocked() {
    return locked;
  }

  public void setLocked(Boolean locked) {
    this.locked = locked;
  }

  public Account loginCount(Integer loginCount) {
    this.loginCount = loginCount;
    return this;
  }

   /**
   * Get loginCount
   * @return loginCount
  **/
  @Schema(description = "")
  public Integer getLoginCount() {
    return loginCount;
  }

  public void setLoginCount(Integer loginCount) {
    this.loginCount = loginCount;
  }

  public Account loginFailures(Integer loginFailures) {
    this.loginFailures = loginFailures;
    return this;
  }

   /**
   * Get loginFailures
   * @return loginFailures
  **/
  @Schema(description = "")
  public Integer getLoginFailures() {
    return loginFailures;
  }

  public void setLoginFailures(Integer loginFailures) {
    this.loginFailures = loginFailures;
  }

  public Account neverExpires(Boolean neverExpires) {
    this.neverExpires = neverExpires;
    return this;
  }

   /**
   * Get neverExpires
   * @return neverExpires
  **/
  @Schema(description = "")
  public Boolean isNeverExpires() {
    return neverExpires;
  }

  public void setNeverExpires(Boolean neverExpires) {
    this.neverExpires = neverExpires;
  }

  public Account processingAccount(Boolean processingAccount) {
    this.processingAccount = processingAccount;
    return this;
  }

   /**
   * Get processingAccount
   * @return processingAccount
  **/
  @Schema(description = "")
  public Boolean isProcessingAccount() {
    return processingAccount;
  }

  public void setProcessingAccount(Boolean processingAccount) {
    this.processingAccount = processingAccount;
  }

  public Account reactivatedMs(Long reactivatedMs) {
    this.reactivatedMs = reactivatedMs;
    return this;
  }

   /**
   * Get reactivatedMs
   * @return reactivatedMs
  **/
  @Schema(description = "")
  public Long getReactivatedMs() {
    return reactivatedMs;
  }

  public void setReactivatedMs(Long reactivatedMs) {
    this.reactivatedMs = reactivatedMs;
  }

  public Account updateTimeMs(Long updateTimeMs) {
    this.updateTimeMs = updateTimeMs;
    return this;
  }

   /**
   * Get updateTimeMs
   * @return updateTimeMs
  **/
  @Schema(description = "")
  public Long getUpdateTimeMs() {
    return updateTimeMs;
  }

  public void setUpdateTimeMs(Long updateTimeMs) {
    this.updateTimeMs = updateTimeMs;
  }

  public Account updateUser(String updateUser) {
    this.updateUser = updateUser;
    return this;
  }

   /**
   * Get updateUser
   * @return updateUser
  **/
  @Schema(description = "")
  public String getUpdateUser() {
    return updateUser;
  }

  public void setUpdateUser(String updateUser) {
    this.updateUser = updateUser;
  }

  public Account userId(String userId) {
    this.userId = userId;
    return this;
  }

   /**
   * Get userId
   * @return userId
  **/
  @Schema(description = "")
  public String getUserId() {
    return userId;
  }

  public void setUserId(String userId) {
    this.userId = userId;
  }

  public Account version(Integer version) {
    this.version = version;
    return this;
  }

   /**
   * Get version
   * @return version
  **/
  @Schema(description = "")
  public Integer getVersion() {
    return version;
  }

  public void setVersion(Integer version) {
    this.version = version;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Account account = (Account) o;
    return Objects.equals(this.comments, account.comments) &&
        Objects.equals(this.createTimeMs, account.createTimeMs) &&
        Objects.equals(this.createUser, account.createUser) &&
        Objects.equals(this.email, account.email) &&
        Objects.equals(this.enabled, account.enabled) &&
        Objects.equals(this.firstName, account.firstName) &&
        Objects.equals(this.forcePasswordChange, account.forcePasswordChange) &&
        Objects.equals(this.id, account.id) &&
        Objects.equals(this.inactive, account.inactive) &&
        Objects.equals(this.lastLoginMs, account.lastLoginMs) &&
        Objects.equals(this.lastName, account.lastName) &&
        Objects.equals(this.locked, account.locked) &&
        Objects.equals(this.loginCount, account.loginCount) &&
        Objects.equals(this.loginFailures, account.loginFailures) &&
        Objects.equals(this.neverExpires, account.neverExpires) &&
        Objects.equals(this.processingAccount, account.processingAccount) &&
        Objects.equals(this.reactivatedMs, account.reactivatedMs) &&
        Objects.equals(this.updateTimeMs, account.updateTimeMs) &&
        Objects.equals(this.updateUser, account.updateUser) &&
        Objects.equals(this.userId, account.userId) &&
        Objects.equals(this.version, account.version);
  }

  @Override
  public int hashCode() {
    return Objects.hash(comments, createTimeMs, createUser, email, enabled, firstName, forcePasswordChange, id, inactive, lastLoginMs, lastName, locked, loginCount, loginFailures, neverExpires, processingAccount, reactivatedMs, updateTimeMs, updateUser, userId, version);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Account {\n");
    
    sb.append("    comments: ").append(toIndentedString(comments)).append("\n");
    sb.append("    createTimeMs: ").append(toIndentedString(createTimeMs)).append("\n");
    sb.append("    createUser: ").append(toIndentedString(createUser)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    forcePasswordChange: ").append(toIndentedString(forcePasswordChange)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    inactive: ").append(toIndentedString(inactive)).append("\n");
    sb.append("    lastLoginMs: ").append(toIndentedString(lastLoginMs)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    locked: ").append(toIndentedString(locked)).append("\n");
    sb.append("    loginCount: ").append(toIndentedString(loginCount)).append("\n");
    sb.append("    loginFailures: ").append(toIndentedString(loginFailures)).append("\n");
    sb.append("    neverExpires: ").append(toIndentedString(neverExpires)).append("\n");
    sb.append("    processingAccount: ").append(toIndentedString(processingAccount)).append("\n");
    sb.append("    reactivatedMs: ").append(toIndentedString(reactivatedMs)).append("\n");
    sb.append("    updateTimeMs: ").append(toIndentedString(updateTimeMs)).append("\n");
    sb.append("    updateUser: ").append(toIndentedString(updateUser)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
