/*
 * Stroom API
 * Various APIs for interacting with Stroom and its data
 *
 * OpenAPI spec version: v1/v2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.DocRef;
import io.swagger.client.model.PipelinePropertyType;
import io.swagger.client.model.PipelinePropertyValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * PipelineProperty
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-05-13T17:13:49.037+01:00[Europe/London]")
public class PipelineProperty {
  @SerializedName("element")
  private String element = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("propertyType")
  private PipelinePropertyType propertyType = null;

  @SerializedName("sourcePipeline")
  private DocRef sourcePipeline = null;

  @SerializedName("value")
  private PipelinePropertyValue value = null;

  public PipelineProperty element(String element) {
    this.element = element;
    return this;
  }

   /**
   * Get element
   * @return element
  **/
  @Schema(required = true, description = "")
  public String getElement() {
    return element;
  }

  public void setElement(String element) {
    this.element = element;
  }

  public PipelineProperty name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(required = true, description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public PipelineProperty propertyType(PipelinePropertyType propertyType) {
    this.propertyType = propertyType;
    return this;
  }

   /**
   * Get propertyType
   * @return propertyType
  **/
  @Schema(description = "")
  public PipelinePropertyType getPropertyType() {
    return propertyType;
  }

  public void setPropertyType(PipelinePropertyType propertyType) {
    this.propertyType = propertyType;
  }

  public PipelineProperty sourcePipeline(DocRef sourcePipeline) {
    this.sourcePipeline = sourcePipeline;
    return this;
  }

   /**
   * Get sourcePipeline
   * @return sourcePipeline
  **/
  @Schema(description = "")
  public DocRef getSourcePipeline() {
    return sourcePipeline;
  }

  public void setSourcePipeline(DocRef sourcePipeline) {
    this.sourcePipeline = sourcePipeline;
  }

  public PipelineProperty value(PipelinePropertyValue value) {
    this.value = value;
    return this;
  }

   /**
   * Get value
   * @return value
  **/
  @Schema(description = "")
  public PipelinePropertyValue getValue() {
    return value;
  }

  public void setValue(PipelinePropertyValue value) {
    this.value = value;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PipelineProperty pipelineProperty = (PipelineProperty) o;
    return Objects.equals(this.element, pipelineProperty.element) &&
        Objects.equals(this.name, pipelineProperty.name) &&
        Objects.equals(this.propertyType, pipelineProperty.propertyType) &&
        Objects.equals(this.sourcePipeline, pipelineProperty.sourcePipeline) &&
        Objects.equals(this.value, pipelineProperty.value);
  }

  @Override
  public int hashCode() {
    return Objects.hash(element, name, propertyType, sourcePipeline, value);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PipelineProperty {\n");
    
    sb.append("    element: ").append(toIndentedString(element)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    propertyType: ").append(toIndentedString(propertyType)).append("\n");
    sb.append("    sourcePipeline: ").append(toIndentedString(sourcePipeline)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
