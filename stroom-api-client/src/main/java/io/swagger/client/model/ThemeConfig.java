/*
 * Stroom API
 * Various APIs for interacting with Stroom and its data
 *
 * OpenAPI spec version: v1/v2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * ThemeConfig
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-05-13T17:13:49.037+01:00[Europe/London]")
public class ThemeConfig {
  @SerializedName("backgroundAttachment")
  private String backgroundAttachment = null;

  @SerializedName("backgroundColour")
  private String backgroundColour = null;

  @SerializedName("backgroundImage")
  private String backgroundImage = null;

  @SerializedName("backgroundOpacity")
  private String backgroundOpacity = null;

  @SerializedName("backgroundPosition")
  private String backgroundPosition = null;

  @SerializedName("backgroundRepeat")
  private String backgroundRepeat = null;

  @SerializedName("labelColours")
  private String labelColours = null;

  @SerializedName("topMenuTextColour")
  private String topMenuTextColour = null;

  @SerializedName("tubeOpacity")
  private String tubeOpacity = null;

  @SerializedName("tubeVisible")
  private String tubeVisible = null;

  public ThemeConfig backgroundAttachment(String backgroundAttachment) {
    this.backgroundAttachment = backgroundAttachment;
    return this;
  }

   /**
   * Get backgroundAttachment
   * @return backgroundAttachment
  **/
  @Schema(description = "")
  public String getBackgroundAttachment() {
    return backgroundAttachment;
  }

  public void setBackgroundAttachment(String backgroundAttachment) {
    this.backgroundAttachment = backgroundAttachment;
  }

  public ThemeConfig backgroundColour(String backgroundColour) {
    this.backgroundColour = backgroundColour;
    return this;
  }

   /**
   * Get backgroundColour
   * @return backgroundColour
  **/
  @Schema(description = "")
  public String getBackgroundColour() {
    return backgroundColour;
  }

  public void setBackgroundColour(String backgroundColour) {
    this.backgroundColour = backgroundColour;
  }

  public ThemeConfig backgroundImage(String backgroundImage) {
    this.backgroundImage = backgroundImage;
    return this;
  }

   /**
   * Get backgroundImage
   * @return backgroundImage
  **/
  @Schema(description = "")
  public String getBackgroundImage() {
    return backgroundImage;
  }

  public void setBackgroundImage(String backgroundImage) {
    this.backgroundImage = backgroundImage;
  }

  public ThemeConfig backgroundOpacity(String backgroundOpacity) {
    this.backgroundOpacity = backgroundOpacity;
    return this;
  }

   /**
   * Get backgroundOpacity
   * @return backgroundOpacity
  **/
  @Schema(description = "")
  public String getBackgroundOpacity() {
    return backgroundOpacity;
  }

  public void setBackgroundOpacity(String backgroundOpacity) {
    this.backgroundOpacity = backgroundOpacity;
  }

  public ThemeConfig backgroundPosition(String backgroundPosition) {
    this.backgroundPosition = backgroundPosition;
    return this;
  }

   /**
   * Get backgroundPosition
   * @return backgroundPosition
  **/
  @Schema(description = "")
  public String getBackgroundPosition() {
    return backgroundPosition;
  }

  public void setBackgroundPosition(String backgroundPosition) {
    this.backgroundPosition = backgroundPosition;
  }

  public ThemeConfig backgroundRepeat(String backgroundRepeat) {
    this.backgroundRepeat = backgroundRepeat;
    return this;
  }

   /**
   * Get backgroundRepeat
   * @return backgroundRepeat
  **/
  @Schema(description = "")
  public String getBackgroundRepeat() {
    return backgroundRepeat;
  }

  public void setBackgroundRepeat(String backgroundRepeat) {
    this.backgroundRepeat = backgroundRepeat;
  }

  public ThemeConfig labelColours(String labelColours) {
    this.labelColours = labelColours;
    return this;
  }

   /**
   * Get labelColours
   * @return labelColours
  **/
  @Schema(description = "")
  public String getLabelColours() {
    return labelColours;
  }

  public void setLabelColours(String labelColours) {
    this.labelColours = labelColours;
  }

  public ThemeConfig topMenuTextColour(String topMenuTextColour) {
    this.topMenuTextColour = topMenuTextColour;
    return this;
  }

   /**
   * Get topMenuTextColour
   * @return topMenuTextColour
  **/
  @Schema(description = "")
  public String getTopMenuTextColour() {
    return topMenuTextColour;
  }

  public void setTopMenuTextColour(String topMenuTextColour) {
    this.topMenuTextColour = topMenuTextColour;
  }

  public ThemeConfig tubeOpacity(String tubeOpacity) {
    this.tubeOpacity = tubeOpacity;
    return this;
  }

   /**
   * Get tubeOpacity
   * @return tubeOpacity
  **/
  @Schema(description = "")
  public String getTubeOpacity() {
    return tubeOpacity;
  }

  public void setTubeOpacity(String tubeOpacity) {
    this.tubeOpacity = tubeOpacity;
  }

  public ThemeConfig tubeVisible(String tubeVisible) {
    this.tubeVisible = tubeVisible;
    return this;
  }

   /**
   * Get tubeVisible
   * @return tubeVisible
  **/
  @Schema(description = "")
  public String getTubeVisible() {
    return tubeVisible;
  }

  public void setTubeVisible(String tubeVisible) {
    this.tubeVisible = tubeVisible;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ThemeConfig themeConfig = (ThemeConfig) o;
    return Objects.equals(this.backgroundAttachment, themeConfig.backgroundAttachment) &&
        Objects.equals(this.backgroundColour, themeConfig.backgroundColour) &&
        Objects.equals(this.backgroundImage, themeConfig.backgroundImage) &&
        Objects.equals(this.backgroundOpacity, themeConfig.backgroundOpacity) &&
        Objects.equals(this.backgroundPosition, themeConfig.backgroundPosition) &&
        Objects.equals(this.backgroundRepeat, themeConfig.backgroundRepeat) &&
        Objects.equals(this.labelColours, themeConfig.labelColours) &&
        Objects.equals(this.topMenuTextColour, themeConfig.topMenuTextColour) &&
        Objects.equals(this.tubeOpacity, themeConfig.tubeOpacity) &&
        Objects.equals(this.tubeVisible, themeConfig.tubeVisible);
  }

  @Override
  public int hashCode() {
    return Objects.hash(backgroundAttachment, backgroundColour, backgroundImage, backgroundOpacity, backgroundPosition, backgroundRepeat, labelColours, topMenuTextColour, tubeOpacity, tubeVisible);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ThemeConfig {\n");
    
    sb.append("    backgroundAttachment: ").append(toIndentedString(backgroundAttachment)).append("\n");
    sb.append("    backgroundColour: ").append(toIndentedString(backgroundColour)).append("\n");
    sb.append("    backgroundImage: ").append(toIndentedString(backgroundImage)).append("\n");
    sb.append("    backgroundOpacity: ").append(toIndentedString(backgroundOpacity)).append("\n");
    sb.append("    backgroundPosition: ").append(toIndentedString(backgroundPosition)).append("\n");
    sb.append("    backgroundRepeat: ").append(toIndentedString(backgroundRepeat)).append("\n");
    sb.append("    labelColours: ").append(toIndentedString(labelColours)).append("\n");
    sb.append("    topMenuTextColour: ").append(toIndentedString(topMenuTextColour)).append("\n");
    sb.append("    tubeOpacity: ").append(toIndentedString(tubeOpacity)).append("\n");
    sb.append("    tubeVisible: ").append(toIndentedString(tubeVisible)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
