/*
 * Stroom API
 * Various APIs for interacting with Stroom and its data
 *
 * OpenAPI spec version: v1/v2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * SelectionIndexShardStatus
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-05-13T17:13:49.037+01:00[Europe/London]")
public class SelectionIndexShardStatus {
  @SerializedName("matchAll")
  private Boolean matchAll = null;

  /**
   * Gets or Sets set
   */
  @JsonAdapter(SetEnum.Adapter.class)
  public enum SetEnum {
    CLOSED("CLOSED"),
    OPEN("OPEN"),
    CLOSING("CLOSING"),
    OPENING("OPENING"),
    NEW("NEW"),
    DELETED("DELETED"),
    CORRUPT("CORRUPT");

    private String value;

    SetEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static SetEnum fromValue(String text) {
      for (SetEnum b : SetEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<SetEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final SetEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public SetEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return SetEnum.fromValue(String.valueOf(value));
      }
    }
  }  @SerializedName("set")
  private List<SetEnum> set = null;

  public SelectionIndexShardStatus matchAll(Boolean matchAll) {
    this.matchAll = matchAll;
    return this;
  }

   /**
   * Get matchAll
   * @return matchAll
  **/
  @Schema(description = "")
  public Boolean isMatchAll() {
    return matchAll;
  }

  public void setMatchAll(Boolean matchAll) {
    this.matchAll = matchAll;
  }

  public SelectionIndexShardStatus set(List<SetEnum> set) {
    this.set = set;
    return this;
  }

  public SelectionIndexShardStatus addSetItem(SetEnum setItem) {
    if (this.set == null) {
      this.set = new ArrayList<SetEnum>();
    }
    this.set.add(setItem);
    return this;
  }

   /**
   * Get set
   * @return set
  **/
  @Schema(description = "")
  public List<SetEnum> getSet() {
    return set;
  }

  public void setSet(List<SetEnum> set) {
    this.set = set;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SelectionIndexShardStatus selectionIndexShardStatus = (SelectionIndexShardStatus) o;
    return Objects.equals(this.matchAll, selectionIndexShardStatus.matchAll) &&
        Objects.equals(this.set, selectionIndexShardStatus.set);
  }

  @Override
  public int hashCode() {
    return Objects.hash(matchAll, set);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SelectionIndexShardStatus {\n");
    
    sb.append("    matchAll: ").append(toIndentedString(matchAll)).append("\n");
    sb.append("    set: ").append(toIndentedString(set)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
