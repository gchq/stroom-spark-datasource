/*
 * Stroom API
 * Various APIs for interacting with Stroom and its data
 *
 * OpenAPI spec version: v1/v2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Location
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-05-13T17:13:49.037+01:00[Europe/London]")

public class Location {
  @SerializedName("colNo")
  private Integer colNo = null;

  @SerializedName("lineNo")
  private Integer lineNo = null;

  @SerializedName("type")
  private String type = null;

  public Location() {
    this.type = this.getClass().getSimpleName();
  }
  public Location colNo(Integer colNo) {
    this.colNo = colNo;
    return this;
  }

   /**
   * Get colNo
   * @return colNo
  **/
  @Schema(description = "")
  public Integer getColNo() {
    return colNo;
  }

  public void setColNo(Integer colNo) {
    this.colNo = colNo;
  }

  public Location lineNo(Integer lineNo) {
    this.lineNo = lineNo;
    return this;
  }

   /**
   * Get lineNo
   * @return lineNo
  **/
  @Schema(description = "")
  public Integer getLineNo() {
    return lineNo;
  }

  public void setLineNo(Integer lineNo) {
    this.lineNo = lineNo;
  }

  public Location type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @Schema(required = true, description = "")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Location location = (Location) o;
    return Objects.equals(this.colNo, location.colNo) &&
        Objects.equals(this.lineNo, location.lineNo) &&
        Objects.equals(this.type, location.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(colNo, lineNo, type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Location {\n");
    
    sb.append("    colNo: ").append(toIndentedString(colNo)).append("\n");
    sb.append("    lineNo: ").append(toIndentedString(lineNo)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
