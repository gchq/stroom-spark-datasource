/*
 * Stroom API
 * Various APIs for interacting with Stroom and its data
 *
 * OpenAPI spec version: v1/v2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * RefDataProcessingInfo
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-05-13T17:13:49.037+01:00[Europe/London]")
public class RefDataProcessingInfo {
  @SerializedName("createTimeEpochMs")
  private Long createTimeEpochMs = null;

  @SerializedName("effectiveTimeEpochMs")
  private Long effectiveTimeEpochMs = null;

  @SerializedName("lastAccessedTimeEpochMs")
  private Long lastAccessedTimeEpochMs = null;

  /**
   * Gets or Sets processingState
   */
  @JsonAdapter(ProcessingStateEnum.Adapter.class)
  public enum ProcessingStateEnum {
    LOAD_IN_PROGRESS("LOAD_IN_PROGRESS"),
    PURGE_IN_PROGRESS("PURGE_IN_PROGRESS"),
    COMPLETE("COMPLETE");

    private String value;

    ProcessingStateEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static ProcessingStateEnum fromValue(String text) {
      for (ProcessingStateEnum b : ProcessingStateEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<ProcessingStateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ProcessingStateEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ProcessingStateEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return ProcessingStateEnum.fromValue(String.valueOf(value));
      }
    }
  }  @SerializedName("processingState")
  private ProcessingStateEnum processingState = null;

  public RefDataProcessingInfo createTimeEpochMs(Long createTimeEpochMs) {
    this.createTimeEpochMs = createTimeEpochMs;
    return this;
  }

   /**
   * Get createTimeEpochMs
   * @return createTimeEpochMs
  **/
  @Schema(description = "")
  public Long getCreateTimeEpochMs() {
    return createTimeEpochMs;
  }

  public void setCreateTimeEpochMs(Long createTimeEpochMs) {
    this.createTimeEpochMs = createTimeEpochMs;
  }

  public RefDataProcessingInfo effectiveTimeEpochMs(Long effectiveTimeEpochMs) {
    this.effectiveTimeEpochMs = effectiveTimeEpochMs;
    return this;
  }

   /**
   * Get effectiveTimeEpochMs
   * @return effectiveTimeEpochMs
  **/
  @Schema(description = "")
  public Long getEffectiveTimeEpochMs() {
    return effectiveTimeEpochMs;
  }

  public void setEffectiveTimeEpochMs(Long effectiveTimeEpochMs) {
    this.effectiveTimeEpochMs = effectiveTimeEpochMs;
  }

  public RefDataProcessingInfo lastAccessedTimeEpochMs(Long lastAccessedTimeEpochMs) {
    this.lastAccessedTimeEpochMs = lastAccessedTimeEpochMs;
    return this;
  }

   /**
   * Get lastAccessedTimeEpochMs
   * @return lastAccessedTimeEpochMs
  **/
  @Schema(description = "")
  public Long getLastAccessedTimeEpochMs() {
    return lastAccessedTimeEpochMs;
  }

  public void setLastAccessedTimeEpochMs(Long lastAccessedTimeEpochMs) {
    this.lastAccessedTimeEpochMs = lastAccessedTimeEpochMs;
  }

  public RefDataProcessingInfo processingState(ProcessingStateEnum processingState) {
    this.processingState = processingState;
    return this;
  }

   /**
   * Get processingState
   * @return processingState
  **/
  @Schema(description = "")
  public ProcessingStateEnum getProcessingState() {
    return processingState;
  }

  public void setProcessingState(ProcessingStateEnum processingState) {
    this.processingState = processingState;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RefDataProcessingInfo refDataProcessingInfo = (RefDataProcessingInfo) o;
    return Objects.equals(this.createTimeEpochMs, refDataProcessingInfo.createTimeEpochMs) &&
        Objects.equals(this.effectiveTimeEpochMs, refDataProcessingInfo.effectiveTimeEpochMs) &&
        Objects.equals(this.lastAccessedTimeEpochMs, refDataProcessingInfo.lastAccessedTimeEpochMs) &&
        Objects.equals(this.processingState, refDataProcessingInfo.processingState);
  }

  @Override
  public int hashCode() {
    return Objects.hash(createTimeEpochMs, effectiveTimeEpochMs, lastAccessedTimeEpochMs, processingState);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RefDataProcessingInfo {\n");
    
    sb.append("    createTimeEpochMs: ").append(toIndentedString(createTimeEpochMs)).append("\n");
    sb.append("    effectiveTimeEpochMs: ").append(toIndentedString(effectiveTimeEpochMs)).append("\n");
    sb.append("    lastAccessedTimeEpochMs: ").append(toIndentedString(lastAccessedTimeEpochMs)).append("\n");
    sb.append("    processingState: ").append(toIndentedString(processingState)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
