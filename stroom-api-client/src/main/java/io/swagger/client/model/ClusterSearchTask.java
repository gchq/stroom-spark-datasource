/*
 * Stroom API
 * Various APIs for interacting with Stroom and its data
 *
 * OpenAPI spec version: v1/v2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.CoprocessorSettings;
import io.swagger.client.model.Query;
import io.swagger.client.model.QueryKey;
import io.swagger.client.model.TaskId;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * ClusterSearchTask
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-05-13T17:13:49.037+01:00[Europe/London]")
public class ClusterSearchTask {
  @SerializedName("dateTimeLocale")
  private String dateTimeLocale = null;

  @SerializedName("key")
  private QueryKey key = null;

  @SerializedName("now")
  private Long now = null;

  @SerializedName("query")
  private Query query = null;

  @SerializedName("settings")
  private List<CoprocessorSettings> settings = null;

  @SerializedName("shards")
  private List<Long> shards = null;

  @SerializedName("sourceTaskId")
  private TaskId sourceTaskId = null;

  @SerializedName("taskName")
  private String taskName = null;

  public ClusterSearchTask dateTimeLocale(String dateTimeLocale) {
    this.dateTimeLocale = dateTimeLocale;
    return this;
  }

   /**
   * Get dateTimeLocale
   * @return dateTimeLocale
  **/
  @Schema(description = "")
  public String getDateTimeLocale() {
    return dateTimeLocale;
  }

  public void setDateTimeLocale(String dateTimeLocale) {
    this.dateTimeLocale = dateTimeLocale;
  }

  public ClusterSearchTask key(QueryKey key) {
    this.key = key;
    return this;
  }

   /**
   * Get key
   * @return key
  **/
  @Schema(description = "")
  public QueryKey getKey() {
    return key;
  }

  public void setKey(QueryKey key) {
    this.key = key;
  }

  public ClusterSearchTask now(Long now) {
    this.now = now;
    return this;
  }

   /**
   * Get now
   * @return now
  **/
  @Schema(description = "")
  public Long getNow() {
    return now;
  }

  public void setNow(Long now) {
    this.now = now;
  }

  public ClusterSearchTask query(Query query) {
    this.query = query;
    return this;
  }

   /**
   * Get query
   * @return query
  **/
  @Schema(description = "")
  public Query getQuery() {
    return query;
  }

  public void setQuery(Query query) {
    this.query = query;
  }

  public ClusterSearchTask settings(List<CoprocessorSettings> settings) {
    this.settings = settings;
    return this;
  }

  public ClusterSearchTask addSettingsItem(CoprocessorSettings settingsItem) {
    if (this.settings == null) {
      this.settings = new ArrayList<CoprocessorSettings>();
    }
    this.settings.add(settingsItem);
    return this;
  }

   /**
   * Get settings
   * @return settings
  **/
  @Schema(description = "")
  public List<CoprocessorSettings> getSettings() {
    return settings;
  }

  public void setSettings(List<CoprocessorSettings> settings) {
    this.settings = settings;
  }

  public ClusterSearchTask shards(List<Long> shards) {
    this.shards = shards;
    return this;
  }

  public ClusterSearchTask addShardsItem(Long shardsItem) {
    if (this.shards == null) {
      this.shards = new ArrayList<Long>();
    }
    this.shards.add(shardsItem);
    return this;
  }

   /**
   * Get shards
   * @return shards
  **/
  @Schema(description = "")
  public List<Long> getShards() {
    return shards;
  }

  public void setShards(List<Long> shards) {
    this.shards = shards;
  }

  public ClusterSearchTask sourceTaskId(TaskId sourceTaskId) {
    this.sourceTaskId = sourceTaskId;
    return this;
  }

   /**
   * Get sourceTaskId
   * @return sourceTaskId
  **/
  @Schema(description = "")
  public TaskId getSourceTaskId() {
    return sourceTaskId;
  }

  public void setSourceTaskId(TaskId sourceTaskId) {
    this.sourceTaskId = sourceTaskId;
  }

  public ClusterSearchTask taskName(String taskName) {
    this.taskName = taskName;
    return this;
  }

   /**
   * Get taskName
   * @return taskName
  **/
  @Schema(description = "")
  public String getTaskName() {
    return taskName;
  }

  public void setTaskName(String taskName) {
    this.taskName = taskName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ClusterSearchTask clusterSearchTask = (ClusterSearchTask) o;
    return Objects.equals(this.dateTimeLocale, clusterSearchTask.dateTimeLocale) &&
        Objects.equals(this.key, clusterSearchTask.key) &&
        Objects.equals(this.now, clusterSearchTask.now) &&
        Objects.equals(this.query, clusterSearchTask.query) &&
        Objects.equals(this.settings, clusterSearchTask.settings) &&
        Objects.equals(this.shards, clusterSearchTask.shards) &&
        Objects.equals(this.sourceTaskId, clusterSearchTask.sourceTaskId) &&
        Objects.equals(this.taskName, clusterSearchTask.taskName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dateTimeLocale, key, now, query, settings, shards, sourceTaskId, taskName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ClusterSearchTask {\n");
    
    sb.append("    dateTimeLocale: ").append(toIndentedString(dateTimeLocale)).append("\n");
    sb.append("    key: ").append(toIndentedString(key)).append("\n");
    sb.append("    now: ").append(toIndentedString(now)).append("\n");
    sb.append("    query: ").append(toIndentedString(query)).append("\n");
    sb.append("    settings: ").append(toIndentedString(settings)).append("\n");
    sb.append("    shards: ").append(toIndentedString(shards)).append("\n");
    sb.append("    sourceTaskId: ").append(toIndentedString(sourceTaskId)).append("\n");
    sb.append("    taskName: ").append(toIndentedString(taskName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
