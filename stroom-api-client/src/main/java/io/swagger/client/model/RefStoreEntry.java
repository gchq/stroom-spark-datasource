/*
 * Stroom API
 * Various APIs for interacting with Stroom and its data
 *
 * OpenAPI spec version: v1/v2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.MapDefinition;
import io.swagger.client.model.RefDataProcessingInfo;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * RefStoreEntry
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-05-13T17:13:49.037+01:00[Europe/London]")
public class RefStoreEntry {
  @SerializedName("key")
  private String key = null;

  @SerializedName("mapDefinition")
  private MapDefinition mapDefinition = null;

  @SerializedName("refDataProcessingInfo")
  private RefDataProcessingInfo refDataProcessingInfo = null;

  @SerializedName("value")
  private String value = null;

  @SerializedName("valueReferenceCount")
  private Integer valueReferenceCount = null;

  public RefStoreEntry key(String key) {
    this.key = key;
    return this;
  }

   /**
   * Get key
   * @return key
  **/
  @Schema(description = "")
  public String getKey() {
    return key;
  }

  public void setKey(String key) {
    this.key = key;
  }

  public RefStoreEntry mapDefinition(MapDefinition mapDefinition) {
    this.mapDefinition = mapDefinition;
    return this;
  }

   /**
   * Get mapDefinition
   * @return mapDefinition
  **/
  @Schema(description = "")
  public MapDefinition getMapDefinition() {
    return mapDefinition;
  }

  public void setMapDefinition(MapDefinition mapDefinition) {
    this.mapDefinition = mapDefinition;
  }

  public RefStoreEntry refDataProcessingInfo(RefDataProcessingInfo refDataProcessingInfo) {
    this.refDataProcessingInfo = refDataProcessingInfo;
    return this;
  }

   /**
   * Get refDataProcessingInfo
   * @return refDataProcessingInfo
  **/
  @Schema(description = "")
  public RefDataProcessingInfo getRefDataProcessingInfo() {
    return refDataProcessingInfo;
  }

  public void setRefDataProcessingInfo(RefDataProcessingInfo refDataProcessingInfo) {
    this.refDataProcessingInfo = refDataProcessingInfo;
  }

  public RefStoreEntry value(String value) {
    this.value = value;
    return this;
  }

   /**
   * Get value
   * @return value
  **/
  @Schema(description = "")
  public String getValue() {
    return value;
  }

  public void setValue(String value) {
    this.value = value;
  }

  public RefStoreEntry valueReferenceCount(Integer valueReferenceCount) {
    this.valueReferenceCount = valueReferenceCount;
    return this;
  }

   /**
   * Get valueReferenceCount
   * @return valueReferenceCount
  **/
  @Schema(description = "")
  public Integer getValueReferenceCount() {
    return valueReferenceCount;
  }

  public void setValueReferenceCount(Integer valueReferenceCount) {
    this.valueReferenceCount = valueReferenceCount;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RefStoreEntry refStoreEntry = (RefStoreEntry) o;
    return Objects.equals(this.key, refStoreEntry.key) &&
        Objects.equals(this.mapDefinition, refStoreEntry.mapDefinition) &&
        Objects.equals(this.refDataProcessingInfo, refStoreEntry.refDataProcessingInfo) &&
        Objects.equals(this.value, refStoreEntry.value) &&
        Objects.equals(this.valueReferenceCount, refStoreEntry.valueReferenceCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(key, mapDefinition, refDataProcessingInfo, value, valueReferenceCount);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RefStoreEntry {\n");
    
    sb.append("    key: ").append(toIndentedString(key)).append("\n");
    sb.append("    mapDefinition: ").append(toIndentedString(mapDefinition)).append("\n");
    sb.append("    refDataProcessingInfo: ").append(toIndentedString(refDataProcessingInfo)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("    valueReferenceCount: ").append(toIndentedString(valueReferenceCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
