/*
 * Stroom API
 * Various APIs for interacting with Stroom and its data
 *
 * OpenAPI spec version: v1/v2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.AbstractField;
import io.swagger.client.model.ReceiveDataRule;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * ReceiveDataRules
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-05-13T17:13:49.037+01:00[Europe/London]")
public class ReceiveDataRules {
  @SerializedName("createTime")
  private Long createTime = null;

  @SerializedName("createTimeMs")
  private Long createTimeMs = null;

  @SerializedName("createUser")
  private String createUser = null;

  @SerializedName("fields")
  private List<AbstractField> fields = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("rules")
  private List<ReceiveDataRule> rules = null;

  @SerializedName("type")
  private String type = null;

  @SerializedName("updateTime")
  private Long updateTime = null;

  @SerializedName("updateTimeMs")
  private Long updateTimeMs = null;

  @SerializedName("updateUser")
  private String updateUser = null;

  @SerializedName("uuid")
  private String uuid = null;

  @SerializedName("version")
  private String version = null;

  public ReceiveDataRules createTime(Long createTime) {
    this.createTime = createTime;
    return this;
  }

   /**
   * Get createTime
   * @return createTime
  **/
  @Schema(description = "")
  public Long getCreateTime() {
    return createTime;
  }

  public void setCreateTime(Long createTime) {
    this.createTime = createTime;
  }

  public ReceiveDataRules createTimeMs(Long createTimeMs) {
    this.createTimeMs = createTimeMs;
    return this;
  }

   /**
   * Get createTimeMs
   * @return createTimeMs
  **/
  @Schema(description = "")
  public Long getCreateTimeMs() {
    return createTimeMs;
  }

  public void setCreateTimeMs(Long createTimeMs) {
    this.createTimeMs = createTimeMs;
  }

  public ReceiveDataRules createUser(String createUser) {
    this.createUser = createUser;
    return this;
  }

   /**
   * Get createUser
   * @return createUser
  **/
  @Schema(description = "")
  public String getCreateUser() {
    return createUser;
  }

  public void setCreateUser(String createUser) {
    this.createUser = createUser;
  }

  public ReceiveDataRules fields(List<AbstractField> fields) {
    this.fields = fields;
    return this;
  }

  public ReceiveDataRules addFieldsItem(AbstractField fieldsItem) {
    if (this.fields == null) {
      this.fields = new ArrayList<AbstractField>();
    }
    this.fields.add(fieldsItem);
    return this;
  }

   /**
   * Get fields
   * @return fields
  **/
  @Schema(description = "")
  public List<AbstractField> getFields() {
    return fields;
  }

  public void setFields(List<AbstractField> fields) {
    this.fields = fields;
  }

  public ReceiveDataRules name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public ReceiveDataRules rules(List<ReceiveDataRule> rules) {
    this.rules = rules;
    return this;
  }

  public ReceiveDataRules addRulesItem(ReceiveDataRule rulesItem) {
    if (this.rules == null) {
      this.rules = new ArrayList<ReceiveDataRule>();
    }
    this.rules.add(rulesItem);
    return this;
  }

   /**
   * Get rules
   * @return rules
  **/
  @Schema(description = "")
  public List<ReceiveDataRule> getRules() {
    return rules;
  }

  public void setRules(List<ReceiveDataRule> rules) {
    this.rules = rules;
  }

  public ReceiveDataRules type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @Schema(description = "")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public ReceiveDataRules updateTime(Long updateTime) {
    this.updateTime = updateTime;
    return this;
  }

   /**
   * Get updateTime
   * @return updateTime
  **/
  @Schema(description = "")
  public Long getUpdateTime() {
    return updateTime;
  }

  public void setUpdateTime(Long updateTime) {
    this.updateTime = updateTime;
  }

  public ReceiveDataRules updateTimeMs(Long updateTimeMs) {
    this.updateTimeMs = updateTimeMs;
    return this;
  }

   /**
   * Get updateTimeMs
   * @return updateTimeMs
  **/
  @Schema(description = "")
  public Long getUpdateTimeMs() {
    return updateTimeMs;
  }

  public void setUpdateTimeMs(Long updateTimeMs) {
    this.updateTimeMs = updateTimeMs;
  }

  public ReceiveDataRules updateUser(String updateUser) {
    this.updateUser = updateUser;
    return this;
  }

   /**
   * Get updateUser
   * @return updateUser
  **/
  @Schema(description = "")
  public String getUpdateUser() {
    return updateUser;
  }

  public void setUpdateUser(String updateUser) {
    this.updateUser = updateUser;
  }

  public ReceiveDataRules uuid(String uuid) {
    this.uuid = uuid;
    return this;
  }

   /**
   * Get uuid
   * @return uuid
  **/
  @Schema(description = "")
  public String getUuid() {
    return uuid;
  }

  public void setUuid(String uuid) {
    this.uuid = uuid;
  }

  public ReceiveDataRules version(String version) {
    this.version = version;
    return this;
  }

   /**
   * Get version
   * @return version
  **/
  @Schema(description = "")
  public String getVersion() {
    return version;
  }

  public void setVersion(String version) {
    this.version = version;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ReceiveDataRules receiveDataRules = (ReceiveDataRules) o;
    return Objects.equals(this.createTime, receiveDataRules.createTime) &&
        Objects.equals(this.createTimeMs, receiveDataRules.createTimeMs) &&
        Objects.equals(this.createUser, receiveDataRules.createUser) &&
        Objects.equals(this.fields, receiveDataRules.fields) &&
        Objects.equals(this.name, receiveDataRules.name) &&
        Objects.equals(this.rules, receiveDataRules.rules) &&
        Objects.equals(this.type, receiveDataRules.type) &&
        Objects.equals(this.updateTime, receiveDataRules.updateTime) &&
        Objects.equals(this.updateTimeMs, receiveDataRules.updateTimeMs) &&
        Objects.equals(this.updateUser, receiveDataRules.updateUser) &&
        Objects.equals(this.uuid, receiveDataRules.uuid) &&
        Objects.equals(this.version, receiveDataRules.version);
  }

  @Override
  public int hashCode() {
    return Objects.hash(createTime, createTimeMs, createUser, fields, name, rules, type, updateTime, updateTimeMs, updateUser, uuid, version);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ReceiveDataRules {\n");
    
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    createTimeMs: ").append(toIndentedString(createTimeMs)).append("\n");
    sb.append("    createUser: ").append(toIndentedString(createUser)).append("\n");
    sb.append("    fields: ").append(toIndentedString(fields)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    rules: ").append(toIndentedString(rules)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
    sb.append("    updateTimeMs: ").append(toIndentedString(updateTimeMs)).append("\n");
    sb.append("    updateUser: ").append(toIndentedString(updateUser)).append("\n");
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
