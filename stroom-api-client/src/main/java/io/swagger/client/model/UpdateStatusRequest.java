/*
 * Stroom API
 * Various APIs for interacting with Stroom and its data
 *
 * OpenAPI spec version: v1/v2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.FindMetaCriteria;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * UpdateStatusRequest
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-05-13T17:13:49.037+01:00[Europe/London]")
public class UpdateStatusRequest {
  @SerializedName("criteria")
  private FindMetaCriteria criteria = null;

  /**
   * Gets or Sets currentStatus
   */
  @JsonAdapter(CurrentStatusEnum.Adapter.class)
  public enum CurrentStatusEnum {
    UNLOCKED("UNLOCKED"),
    LOCKED("LOCKED"),
    DELETED("DELETED");

    private String value;

    CurrentStatusEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static CurrentStatusEnum fromValue(String text) {
      for (CurrentStatusEnum b : CurrentStatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<CurrentStatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final CurrentStatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public CurrentStatusEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return CurrentStatusEnum.fromValue(String.valueOf(value));
      }
    }
  }  @SerializedName("currentStatus")
  private CurrentStatusEnum currentStatus = null;

  /**
   * Gets or Sets newStatus
   */
  @JsonAdapter(NewStatusEnum.Adapter.class)
  public enum NewStatusEnum {
    UNLOCKED("UNLOCKED"),
    LOCKED("LOCKED"),
    DELETED("DELETED");

    private String value;

    NewStatusEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static NewStatusEnum fromValue(String text) {
      for (NewStatusEnum b : NewStatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<NewStatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final NewStatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public NewStatusEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return NewStatusEnum.fromValue(String.valueOf(value));
      }
    }
  }  @SerializedName("newStatus")
  private NewStatusEnum newStatus = null;

  public UpdateStatusRequest criteria(FindMetaCriteria criteria) {
    this.criteria = criteria;
    return this;
  }

   /**
   * Get criteria
   * @return criteria
  **/
  @Schema(description = "")
  public FindMetaCriteria getCriteria() {
    return criteria;
  }

  public void setCriteria(FindMetaCriteria criteria) {
    this.criteria = criteria;
  }

  public UpdateStatusRequest currentStatus(CurrentStatusEnum currentStatus) {
    this.currentStatus = currentStatus;
    return this;
  }

   /**
   * Get currentStatus
   * @return currentStatus
  **/
  @Schema(description = "")
  public CurrentStatusEnum getCurrentStatus() {
    return currentStatus;
  }

  public void setCurrentStatus(CurrentStatusEnum currentStatus) {
    this.currentStatus = currentStatus;
  }

  public UpdateStatusRequest newStatus(NewStatusEnum newStatus) {
    this.newStatus = newStatus;
    return this;
  }

   /**
   * Get newStatus
   * @return newStatus
  **/
  @Schema(description = "")
  public NewStatusEnum getNewStatus() {
    return newStatus;
  }

  public void setNewStatus(NewStatusEnum newStatus) {
    this.newStatus = newStatus;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateStatusRequest updateStatusRequest = (UpdateStatusRequest) o;
    return Objects.equals(this.criteria, updateStatusRequest.criteria) &&
        Objects.equals(this.currentStatus, updateStatusRequest.currentStatus) &&
        Objects.equals(this.newStatus, updateStatusRequest.newStatus);
  }

  @Override
  public int hashCode() {
    return Objects.hash(criteria, currentStatus, newStatus);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateStatusRequest {\n");
    
    sb.append("    criteria: ").append(toIndentedString(criteria)).append("\n");
    sb.append("    currentStatus: ").append(toIndentedString(currentStatus)).append("\n");
    sb.append("    newStatus: ").append(toIndentedString(newStatus)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
