/*
 * Stroom API
 * Various APIs for interacting with Stroom and its data
 *
 * OpenAPI spec version: v1/v2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.FormatSettings;
import io.swagger.client.model.TimeZone;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * The string formatting to apply to a date value
 */
@Schema(description = "The string formatting to apply to a date value")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-05-13T17:13:49.037+01:00[Europe/London]")
public class DateTimeFormatSettings extends FormatSettings {
  @SerializedName("pattern")
  private String pattern = null;

  @SerializedName("timeZone")
  private TimeZone timeZone = null;

  public DateTimeFormatSettings pattern(String pattern) {
    this.pattern = pattern;
    return this;
  }

   /**
   * A date time formatting pattern string conforming to the specification of java.time.format.DateTimeFormatter
   * @return pattern
  **/
  @Schema(required = true, description = "A date time formatting pattern string conforming to the specification of java.time.format.DateTimeFormatter")
  public String getPattern() {
    return pattern;
  }

  public void setPattern(String pattern) {
    this.pattern = pattern;
  }

  public DateTimeFormatSettings timeZone(TimeZone timeZone) {
    this.timeZone = timeZone;
    return this;
  }

   /**
   * Get timeZone
   * @return timeZone
  **/
  @Schema(required = true, description = "")
  public TimeZone getTimeZone() {
    return timeZone;
  }

  public void setTimeZone(TimeZone timeZone) {
    this.timeZone = timeZone;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DateTimeFormatSettings dateTimeFormatSettings = (DateTimeFormatSettings) o;
    return Objects.equals(this.pattern, dateTimeFormatSettings.pattern) &&
        Objects.equals(this.timeZone, dateTimeFormatSettings.timeZone) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(pattern, timeZone, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DateTimeFormatSettings {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    pattern: ").append(toIndentedString(pattern)).append("\n");
    sb.append("    timeZone: ").append(toIndentedString(timeZone)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
