/*
 * Stroom API
 * Various APIs for interacting with Stroom and its data
 *
 * OpenAPI spec version: v1/v2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.DocRef;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * PipelinePropertyValue
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-05-13T17:13:49.037+01:00[Europe/London]")
public class PipelinePropertyValue {
  @SerializedName("boolean")
  private Boolean _boolean = null;

  @SerializedName("entity")
  private DocRef entity = null;

  @SerializedName("integer")
  private Integer integer = null;

  @SerializedName("long")
  private Long _long = null;

  @SerializedName("string")
  private String string = null;

  public PipelinePropertyValue _boolean(Boolean _boolean) {
    this._boolean = _boolean;
    return this;
  }

   /**
   * Get _boolean
   * @return _boolean
  **/
  @Schema(description = "")
  public Boolean isBoolean() {
    return _boolean;
  }

  public void setBoolean(Boolean _boolean) {
    this._boolean = _boolean;
  }

  public PipelinePropertyValue entity(DocRef entity) {
    this.entity = entity;
    return this;
  }

   /**
   * Get entity
   * @return entity
  **/
  @Schema(description = "")
  public DocRef getEntity() {
    return entity;
  }

  public void setEntity(DocRef entity) {
    this.entity = entity;
  }

  public PipelinePropertyValue integer(Integer integer) {
    this.integer = integer;
    return this;
  }

   /**
   * Get integer
   * @return integer
  **/
  @Schema(description = "")
  public Integer getInteger() {
    return integer;
  }

  public void setInteger(Integer integer) {
    this.integer = integer;
  }

  public PipelinePropertyValue _long(Long _long) {
    this._long = _long;
    return this;
  }

   /**
   * Get _long
   * @return _long
  **/
  @Schema(description = "")
  public Long getLong() {
    return _long;
  }

  public void setLong(Long _long) {
    this._long = _long;
  }

  public PipelinePropertyValue string(String string) {
    this.string = string;
    return this;
  }

   /**
   * Get string
   * @return string
  **/
  @Schema(description = "")
  public String getString() {
    return string;
  }

  public void setString(String string) {
    this.string = string;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PipelinePropertyValue pipelinePropertyValue = (PipelinePropertyValue) o;
    return Objects.equals(this._boolean, pipelinePropertyValue._boolean) &&
        Objects.equals(this.entity, pipelinePropertyValue.entity) &&
        Objects.equals(this.integer, pipelinePropertyValue.integer) &&
        Objects.equals(this._long, pipelinePropertyValue._long) &&
        Objects.equals(this.string, pipelinePropertyValue.string);
  }

  @Override
  public int hashCode() {
    return Objects.hash(_boolean, entity, integer, _long, string);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PipelinePropertyValue {\n");
    
    sb.append("    _boolean: ").append(toIndentedString(_boolean)).append("\n");
    sb.append("    entity: ").append(toIndentedString(entity)).append("\n");
    sb.append("    integer: ").append(toIndentedString(integer)).append("\n");
    sb.append("    _long: ").append(toIndentedString(_long)).append("\n");
    sb.append("    string: ").append(toIndentedString(string)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
