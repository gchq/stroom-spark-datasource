/*
 * Stroom API
 * Various APIs for interacting with Stroom and its data
 *
 * OpenAPI spec version: v1/v2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.ExplorerNode;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * ExplorerNodePermissions
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-05-13T17:13:49.037+01:00[Europe/London]")
public class ExplorerNodePermissions {
  @SerializedName("admin")
  private Boolean admin = null;

  @SerializedName("createPermissions")
  private List<String> createPermissions = null;

  @SerializedName("documentPermissions")
  private List<String> documentPermissions = null;

  @SerializedName("explorerNode")
  private ExplorerNode explorerNode = null;

  public ExplorerNodePermissions admin(Boolean admin) {
    this.admin = admin;
    return this;
  }

   /**
   * Get admin
   * @return admin
  **/
  @Schema(description = "")
  public Boolean isAdmin() {
    return admin;
  }

  public void setAdmin(Boolean admin) {
    this.admin = admin;
  }

  public ExplorerNodePermissions createPermissions(List<String> createPermissions) {
    this.createPermissions = createPermissions;
    return this;
  }

  public ExplorerNodePermissions addCreatePermissionsItem(String createPermissionsItem) {
    if (this.createPermissions == null) {
      this.createPermissions = new ArrayList<String>();
    }
    this.createPermissions.add(createPermissionsItem);
    return this;
  }

   /**
   * Get createPermissions
   * @return createPermissions
  **/
  @Schema(description = "")
  public List<String> getCreatePermissions() {
    return createPermissions;
  }

  public void setCreatePermissions(List<String> createPermissions) {
    this.createPermissions = createPermissions;
  }

  public ExplorerNodePermissions documentPermissions(List<String> documentPermissions) {
    this.documentPermissions = documentPermissions;
    return this;
  }

  public ExplorerNodePermissions addDocumentPermissionsItem(String documentPermissionsItem) {
    if (this.documentPermissions == null) {
      this.documentPermissions = new ArrayList<String>();
    }
    this.documentPermissions.add(documentPermissionsItem);
    return this;
  }

   /**
   * Get documentPermissions
   * @return documentPermissions
  **/
  @Schema(description = "")
  public List<String> getDocumentPermissions() {
    return documentPermissions;
  }

  public void setDocumentPermissions(List<String> documentPermissions) {
    this.documentPermissions = documentPermissions;
  }

  public ExplorerNodePermissions explorerNode(ExplorerNode explorerNode) {
    this.explorerNode = explorerNode;
    return this;
  }

   /**
   * Get explorerNode
   * @return explorerNode
  **/
  @Schema(description = "")
  public ExplorerNode getExplorerNode() {
    return explorerNode;
  }

  public void setExplorerNode(ExplorerNode explorerNode) {
    this.explorerNode = explorerNode;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExplorerNodePermissions explorerNodePermissions = (ExplorerNodePermissions) o;
    return Objects.equals(this.admin, explorerNodePermissions.admin) &&
        Objects.equals(this.createPermissions, explorerNodePermissions.createPermissions) &&
        Objects.equals(this.documentPermissions, explorerNodePermissions.documentPermissions) &&
        Objects.equals(this.explorerNode, explorerNodePermissions.explorerNode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(admin, createPermissions, documentPermissions, explorerNode);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExplorerNodePermissions {\n");
    
    sb.append("    admin: ").append(toIndentedString(admin)).append("\n");
    sb.append("    createPermissions: ").append(toIndentedString(createPermissions)).append("\n");
    sb.append("    documentPermissions: ").append(toIndentedString(documentPermissions)).append("\n");
    sb.append("    explorerNode: ").append(toIndentedString(explorerNode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
