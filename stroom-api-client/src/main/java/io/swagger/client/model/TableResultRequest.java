/*
 * Stroom API
 * Various APIs for interacting with Stroom and its data
 *
 * OpenAPI spec version: v1/v2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.ComponentResultRequest;
import io.swagger.client.model.OffsetRange;
import io.swagger.client.model.TableSettings;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * TableResultRequest
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-05-13T17:13:49.037+01:00[Europe/London]")
public class TableResultRequest extends ComponentResultRequest {
  @SerializedName("openGroups")
  private List<String> openGroups = null;

  @SerializedName("requestedRange")
  private OffsetRange requestedRange = null;

  @SerializedName("tableSettings")
  private TableSettings tableSettings = null;

  public TableResultRequest openGroups(List<String> openGroups) {
    this.openGroups = openGroups;
    return this;
  }

  public TableResultRequest addOpenGroupsItem(String openGroupsItem) {
    if (this.openGroups == null) {
      this.openGroups = new ArrayList<String>();
    }
    this.openGroups.add(openGroupsItem);
    return this;
  }

   /**
   * Get openGroups
   * @return openGroups
  **/
  @Schema(description = "")
  public List<String> getOpenGroups() {
    return openGroups;
  }

  public void setOpenGroups(List<String> openGroups) {
    this.openGroups = openGroups;
  }

  public TableResultRequest requestedRange(OffsetRange requestedRange) {
    this.requestedRange = requestedRange;
    return this;
  }

   /**
   * Get requestedRange
   * @return requestedRange
  **/
  @Schema(description = "")
  public OffsetRange getRequestedRange() {
    return requestedRange;
  }

  public void setRequestedRange(OffsetRange requestedRange) {
    this.requestedRange = requestedRange;
  }

  public TableResultRequest tableSettings(TableSettings tableSettings) {
    this.tableSettings = tableSettings;
    return this;
  }

   /**
   * Get tableSettings
   * @return tableSettings
  **/
  @Schema(description = "")
  public TableSettings getTableSettings() {
    return tableSettings;
  }

  public void setTableSettings(TableSettings tableSettings) {
    this.tableSettings = tableSettings;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TableResultRequest tableResultRequest = (TableResultRequest) o;
    return Objects.equals(this.openGroups, tableResultRequest.openGroups) &&
        Objects.equals(this.requestedRange, tableResultRequest.requestedRange) &&
        Objects.equals(this.tableSettings, tableResultRequest.tableSettings) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(openGroups, requestedRange, tableSettings, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TableResultRequest {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    openGroups: ").append(toIndentedString(openGroups)).append("\n");
    sb.append("    requestedRange: ").append(toIndentedString(requestedRange)).append("\n");
    sb.append("    tableSettings: ").append(toIndentedString(tableSettings)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
