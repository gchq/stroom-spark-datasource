/*
 * Stroom API
 * Various APIs for interacting with Stroom and its data
 *
 * OpenAPI spec version: v1/v2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.OverrideValueString;
import io.swagger.client.model.PropertyPath;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * ConfigProperty
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-05-13T17:13:49.037+01:00[Europe/London]")
public class ConfigProperty {
  @SerializedName("createTimeMs")
  private Long createTimeMs = null;

  @SerializedName("createUser")
  private String createUser = null;

  @SerializedName("dataTypeName")
  private String dataTypeName = null;

  @SerializedName("databaseOverrideValue")
  private OverrideValueString databaseOverrideValue = null;

  @SerializedName("defaultValue")
  private String defaultValue = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("editable")
  private Boolean editable = null;

  @SerializedName("id")
  private Integer id = null;

  @SerializedName("name")
  private PropertyPath name = null;

  @SerializedName("password")
  private Boolean password = null;

  @SerializedName("requireRestart")
  private Boolean requireRestart = null;

  @SerializedName("requireUiRestart")
  private Boolean requireUiRestart = null;

  @SerializedName("updateTimeMs")
  private Long updateTimeMs = null;

  @SerializedName("updateUser")
  private String updateUser = null;

  @SerializedName("version")
  private Integer version = null;

  @SerializedName("yamlOverrideValue")
  private OverrideValueString yamlOverrideValue = null;

  public ConfigProperty createTimeMs(Long createTimeMs) {
    this.createTimeMs = createTimeMs;
    return this;
  }

   /**
   * Get createTimeMs
   * @return createTimeMs
  **/
  @Schema(description = "")
  public Long getCreateTimeMs() {
    return createTimeMs;
  }

  public void setCreateTimeMs(Long createTimeMs) {
    this.createTimeMs = createTimeMs;
  }

  public ConfigProperty createUser(String createUser) {
    this.createUser = createUser;
    return this;
  }

   /**
   * Get createUser
   * @return createUser
  **/
  @Schema(description = "")
  public String getCreateUser() {
    return createUser;
  }

  public void setCreateUser(String createUser) {
    this.createUser = createUser;
  }

  public ConfigProperty dataTypeName(String dataTypeName) {
    this.dataTypeName = dataTypeName;
    return this;
  }

   /**
   * Get dataTypeName
   * @return dataTypeName
  **/
  @Schema(description = "")
  public String getDataTypeName() {
    return dataTypeName;
  }

  public void setDataTypeName(String dataTypeName) {
    this.dataTypeName = dataTypeName;
  }

  public ConfigProperty databaseOverrideValue(OverrideValueString databaseOverrideValue) {
    this.databaseOverrideValue = databaseOverrideValue;
    return this;
  }

   /**
   * Get databaseOverrideValue
   * @return databaseOverrideValue
  **/
  @Schema(description = "")
  public OverrideValueString getDatabaseOverrideValue() {
    return databaseOverrideValue;
  }

  public void setDatabaseOverrideValue(OverrideValueString databaseOverrideValue) {
    this.databaseOverrideValue = databaseOverrideValue;
  }

  public ConfigProperty defaultValue(String defaultValue) {
    this.defaultValue = defaultValue;
    return this;
  }

   /**
   * Get defaultValue
   * @return defaultValue
  **/
  @Schema(description = "")
  public String getDefaultValue() {
    return defaultValue;
  }

  public void setDefaultValue(String defaultValue) {
    this.defaultValue = defaultValue;
  }

  public ConfigProperty description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public ConfigProperty editable(Boolean editable) {
    this.editable = editable;
    return this;
  }

   /**
   * Get editable
   * @return editable
  **/
  @Schema(description = "")
  public Boolean isEditable() {
    return editable;
  }

  public void setEditable(Boolean editable) {
    this.editable = editable;
  }

  public ConfigProperty id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public ConfigProperty name(PropertyPath name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public PropertyPath getName() {
    return name;
  }

  public void setName(PropertyPath name) {
    this.name = name;
  }

  public ConfigProperty password(Boolean password) {
    this.password = password;
    return this;
  }

   /**
   * Get password
   * @return password
  **/
  @Schema(description = "")
  public Boolean isPassword() {
    return password;
  }

  public void setPassword(Boolean password) {
    this.password = password;
  }

  public ConfigProperty requireRestart(Boolean requireRestart) {
    this.requireRestart = requireRestart;
    return this;
  }

   /**
   * Get requireRestart
   * @return requireRestart
  **/
  @Schema(description = "")
  public Boolean isRequireRestart() {
    return requireRestart;
  }

  public void setRequireRestart(Boolean requireRestart) {
    this.requireRestart = requireRestart;
  }

  public ConfigProperty requireUiRestart(Boolean requireUiRestart) {
    this.requireUiRestart = requireUiRestart;
    return this;
  }

   /**
   * Get requireUiRestart
   * @return requireUiRestart
  **/
  @Schema(description = "")
  public Boolean isRequireUiRestart() {
    return requireUiRestart;
  }

  public void setRequireUiRestart(Boolean requireUiRestart) {
    this.requireUiRestart = requireUiRestart;
  }

  public ConfigProperty updateTimeMs(Long updateTimeMs) {
    this.updateTimeMs = updateTimeMs;
    return this;
  }

   /**
   * Get updateTimeMs
   * @return updateTimeMs
  **/
  @Schema(description = "")
  public Long getUpdateTimeMs() {
    return updateTimeMs;
  }

  public void setUpdateTimeMs(Long updateTimeMs) {
    this.updateTimeMs = updateTimeMs;
  }

  public ConfigProperty updateUser(String updateUser) {
    this.updateUser = updateUser;
    return this;
  }

   /**
   * Get updateUser
   * @return updateUser
  **/
  @Schema(description = "")
  public String getUpdateUser() {
    return updateUser;
  }

  public void setUpdateUser(String updateUser) {
    this.updateUser = updateUser;
  }

  public ConfigProperty version(Integer version) {
    this.version = version;
    return this;
  }

   /**
   * Get version
   * @return version
  **/
  @Schema(description = "")
  public Integer getVersion() {
    return version;
  }

  public void setVersion(Integer version) {
    this.version = version;
  }

  public ConfigProperty yamlOverrideValue(OverrideValueString yamlOverrideValue) {
    this.yamlOverrideValue = yamlOverrideValue;
    return this;
  }

   /**
   * Get yamlOverrideValue
   * @return yamlOverrideValue
  **/
  @Schema(description = "")
  public OverrideValueString getYamlOverrideValue() {
    return yamlOverrideValue;
  }

  public void setYamlOverrideValue(OverrideValueString yamlOverrideValue) {
    this.yamlOverrideValue = yamlOverrideValue;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConfigProperty configProperty = (ConfigProperty) o;
    return Objects.equals(this.createTimeMs, configProperty.createTimeMs) &&
        Objects.equals(this.createUser, configProperty.createUser) &&
        Objects.equals(this.dataTypeName, configProperty.dataTypeName) &&
        Objects.equals(this.databaseOverrideValue, configProperty.databaseOverrideValue) &&
        Objects.equals(this.defaultValue, configProperty.defaultValue) &&
        Objects.equals(this.description, configProperty.description) &&
        Objects.equals(this.editable, configProperty.editable) &&
        Objects.equals(this.id, configProperty.id) &&
        Objects.equals(this.name, configProperty.name) &&
        Objects.equals(this.password, configProperty.password) &&
        Objects.equals(this.requireRestart, configProperty.requireRestart) &&
        Objects.equals(this.requireUiRestart, configProperty.requireUiRestart) &&
        Objects.equals(this.updateTimeMs, configProperty.updateTimeMs) &&
        Objects.equals(this.updateUser, configProperty.updateUser) &&
        Objects.equals(this.version, configProperty.version) &&
        Objects.equals(this.yamlOverrideValue, configProperty.yamlOverrideValue);
  }

  @Override
  public int hashCode() {
    return Objects.hash(createTimeMs, createUser, dataTypeName, databaseOverrideValue, defaultValue, description, editable, id, name, password, requireRestart, requireUiRestart, updateTimeMs, updateUser, version, yamlOverrideValue);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConfigProperty {\n");
    
    sb.append("    createTimeMs: ").append(toIndentedString(createTimeMs)).append("\n");
    sb.append("    createUser: ").append(toIndentedString(createUser)).append("\n");
    sb.append("    dataTypeName: ").append(toIndentedString(dataTypeName)).append("\n");
    sb.append("    databaseOverrideValue: ").append(toIndentedString(databaseOverrideValue)).append("\n");
    sb.append("    defaultValue: ").append(toIndentedString(defaultValue)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    editable: ").append(toIndentedString(editable)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    requireRestart: ").append(toIndentedString(requireRestart)).append("\n");
    sb.append("    requireUiRestart: ").append(toIndentedString(requireUiRestart)).append("\n");
    sb.append("    updateTimeMs: ").append(toIndentedString(updateTimeMs)).append("\n");
    sb.append("    updateUser: ").append(toIndentedString(updateUser)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    yamlOverrideValue: ").append(toIndentedString(yamlOverrideValue)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
