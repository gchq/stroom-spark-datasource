/*
 * Stroom API
 * Various APIs for interacting with Stroom and its data
 *
 * OpenAPI spec version: v1/v2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * TokenConfig
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-05-13T17:13:49.037+01:00[Europe/London]")
public class TokenConfig {
  @SerializedName("algorithm")
  private String algorithm = null;

  @SerializedName("defaultApiKeyExpiryInMinutes")
  private Long defaultApiKeyExpiryInMinutes = null;

  @SerializedName("jwsIssuer")
  private String jwsIssuer = null;

  @SerializedName("timeUntilExpirationForEmailResetToken")
  private String timeUntilExpirationForEmailResetToken = null;

  @SerializedName("timeUntilExpirationForUserToken")
  private String timeUntilExpirationForUserToken = null;

  public TokenConfig algorithm(String algorithm) {
    this.algorithm = algorithm;
    return this;
  }

   /**
   * Get algorithm
   * @return algorithm
  **/
  @Schema(required = true, description = "")
  public String getAlgorithm() {
    return algorithm;
  }

  public void setAlgorithm(String algorithm) {
    this.algorithm = algorithm;
  }

  public TokenConfig defaultApiKeyExpiryInMinutes(Long defaultApiKeyExpiryInMinutes) {
    this.defaultApiKeyExpiryInMinutes = defaultApiKeyExpiryInMinutes;
    return this;
  }

   /**
   * Get defaultApiKeyExpiryInMinutes
   * @return defaultApiKeyExpiryInMinutes
  **/
  @Schema(description = "")
  public Long getDefaultApiKeyExpiryInMinutes() {
    return defaultApiKeyExpiryInMinutes;
  }

  public void setDefaultApiKeyExpiryInMinutes(Long defaultApiKeyExpiryInMinutes) {
    this.defaultApiKeyExpiryInMinutes = defaultApiKeyExpiryInMinutes;
  }

  public TokenConfig jwsIssuer(String jwsIssuer) {
    this.jwsIssuer = jwsIssuer;
    return this;
  }

   /**
   * Get jwsIssuer
   * @return jwsIssuer
  **/
  @Schema(required = true, description = "")
  public String getJwsIssuer() {
    return jwsIssuer;
  }

  public void setJwsIssuer(String jwsIssuer) {
    this.jwsIssuer = jwsIssuer;
  }

  public TokenConfig timeUntilExpirationForEmailResetToken(String timeUntilExpirationForEmailResetToken) {
    this.timeUntilExpirationForEmailResetToken = timeUntilExpirationForEmailResetToken;
    return this;
  }

   /**
   * Get timeUntilExpirationForEmailResetToken
   * @return timeUntilExpirationForEmailResetToken
  **/
  @Schema(required = true, description = "")
  public String getTimeUntilExpirationForEmailResetToken() {
    return timeUntilExpirationForEmailResetToken;
  }

  public void setTimeUntilExpirationForEmailResetToken(String timeUntilExpirationForEmailResetToken) {
    this.timeUntilExpirationForEmailResetToken = timeUntilExpirationForEmailResetToken;
  }

  public TokenConfig timeUntilExpirationForUserToken(String timeUntilExpirationForUserToken) {
    this.timeUntilExpirationForUserToken = timeUntilExpirationForUserToken;
    return this;
  }

   /**
   * Get timeUntilExpirationForUserToken
   * @return timeUntilExpirationForUserToken
  **/
  @Schema(required = true, description = "")
  public String getTimeUntilExpirationForUserToken() {
    return timeUntilExpirationForUserToken;
  }

  public void setTimeUntilExpirationForUserToken(String timeUntilExpirationForUserToken) {
    this.timeUntilExpirationForUserToken = timeUntilExpirationForUserToken;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TokenConfig tokenConfig = (TokenConfig) o;
    return Objects.equals(this.algorithm, tokenConfig.algorithm) &&
        Objects.equals(this.defaultApiKeyExpiryInMinutes, tokenConfig.defaultApiKeyExpiryInMinutes) &&
        Objects.equals(this.jwsIssuer, tokenConfig.jwsIssuer) &&
        Objects.equals(this.timeUntilExpirationForEmailResetToken, tokenConfig.timeUntilExpirationForEmailResetToken) &&
        Objects.equals(this.timeUntilExpirationForUserToken, tokenConfig.timeUntilExpirationForUserToken);
  }

  @Override
  public int hashCode() {
    return Objects.hash(algorithm, defaultApiKeyExpiryInMinutes, jwsIssuer, timeUntilExpirationForEmailResetToken, timeUntilExpirationForUserToken);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TokenConfig {\n");
    
    sb.append("    algorithm: ").append(toIndentedString(algorithm)).append("\n");
    sb.append("    defaultApiKeyExpiryInMinutes: ").append(toIndentedString(defaultApiKeyExpiryInMinutes)).append("\n");
    sb.append("    jwsIssuer: ").append(toIndentedString(jwsIssuer)).append("\n");
    sb.append("    timeUntilExpirationForEmailResetToken: ").append(toIndentedString(timeUntilExpirationForEmailResetToken)).append("\n");
    sb.append("    timeUntilExpirationForUserToken: ").append(toIndentedString(timeUntilExpirationForUserToken)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
