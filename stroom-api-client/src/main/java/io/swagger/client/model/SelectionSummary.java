/*
 * Stroom API
 * Various APIs for interacting with Stroom and its data
 *
 * OpenAPI spec version: v1/v2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.RangeLong;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * SelectionSummary
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-05-13T17:13:49.037+01:00[Europe/London]")
public class SelectionSummary {
  @SerializedName("ageRange")
  private RangeLong ageRange = null;

  @SerializedName("feedCount")
  private Long feedCount = null;

  @SerializedName("itemCount")
  private Long itemCount = null;

  @SerializedName("pipelineCount")
  private Long pipelineCount = null;

  @SerializedName("processorCount")
  private Long processorCount = null;

  @SerializedName("statusCount")
  private Long statusCount = null;

  @SerializedName("typeCount")
  private Long typeCount = null;

  public SelectionSummary ageRange(RangeLong ageRange) {
    this.ageRange = ageRange;
    return this;
  }

   /**
   * Get ageRange
   * @return ageRange
  **/
  @Schema(description = "")
  public RangeLong getAgeRange() {
    return ageRange;
  }

  public void setAgeRange(RangeLong ageRange) {
    this.ageRange = ageRange;
  }

  public SelectionSummary feedCount(Long feedCount) {
    this.feedCount = feedCount;
    return this;
  }

   /**
   * Get feedCount
   * @return feedCount
  **/
  @Schema(description = "")
  public Long getFeedCount() {
    return feedCount;
  }

  public void setFeedCount(Long feedCount) {
    this.feedCount = feedCount;
  }

  public SelectionSummary itemCount(Long itemCount) {
    this.itemCount = itemCount;
    return this;
  }

   /**
   * Get itemCount
   * @return itemCount
  **/
  @Schema(description = "")
  public Long getItemCount() {
    return itemCount;
  }

  public void setItemCount(Long itemCount) {
    this.itemCount = itemCount;
  }

  public SelectionSummary pipelineCount(Long pipelineCount) {
    this.pipelineCount = pipelineCount;
    return this;
  }

   /**
   * Get pipelineCount
   * @return pipelineCount
  **/
  @Schema(description = "")
  public Long getPipelineCount() {
    return pipelineCount;
  }

  public void setPipelineCount(Long pipelineCount) {
    this.pipelineCount = pipelineCount;
  }

  public SelectionSummary processorCount(Long processorCount) {
    this.processorCount = processorCount;
    return this;
  }

   /**
   * Get processorCount
   * @return processorCount
  **/
  @Schema(description = "")
  public Long getProcessorCount() {
    return processorCount;
  }

  public void setProcessorCount(Long processorCount) {
    this.processorCount = processorCount;
  }

  public SelectionSummary statusCount(Long statusCount) {
    this.statusCount = statusCount;
    return this;
  }

   /**
   * Get statusCount
   * @return statusCount
  **/
  @Schema(description = "")
  public Long getStatusCount() {
    return statusCount;
  }

  public void setStatusCount(Long statusCount) {
    this.statusCount = statusCount;
  }

  public SelectionSummary typeCount(Long typeCount) {
    this.typeCount = typeCount;
    return this;
  }

   /**
   * Get typeCount
   * @return typeCount
  **/
  @Schema(description = "")
  public Long getTypeCount() {
    return typeCount;
  }

  public void setTypeCount(Long typeCount) {
    this.typeCount = typeCount;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SelectionSummary selectionSummary = (SelectionSummary) o;
    return Objects.equals(this.ageRange, selectionSummary.ageRange) &&
        Objects.equals(this.feedCount, selectionSummary.feedCount) &&
        Objects.equals(this.itemCount, selectionSummary.itemCount) &&
        Objects.equals(this.pipelineCount, selectionSummary.pipelineCount) &&
        Objects.equals(this.processorCount, selectionSummary.processorCount) &&
        Objects.equals(this.statusCount, selectionSummary.statusCount) &&
        Objects.equals(this.typeCount, selectionSummary.typeCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ageRange, feedCount, itemCount, pipelineCount, processorCount, statusCount, typeCount);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SelectionSummary {\n");
    
    sb.append("    ageRange: ").append(toIndentedString(ageRange)).append("\n");
    sb.append("    feedCount: ").append(toIndentedString(feedCount)).append("\n");
    sb.append("    itemCount: ").append(toIndentedString(itemCount)).append("\n");
    sb.append("    pipelineCount: ").append(toIndentedString(pipelineCount)).append("\n");
    sb.append("    processorCount: ").append(toIndentedString(processorCount)).append("\n");
    sb.append("    statusCount: ").append(toIndentedString(statusCount)).append("\n");
    sb.append("    typeCount: ").append(toIndentedString(typeCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
