/*
 * Stroom API
 * Various APIs for interacting with Stroom and its data
 *
 * OpenAPI spec version: v1/v2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.ComponentSettings;
import io.swagger.client.model.DocRef;
import io.swagger.client.model.Field;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * TextComponentSettings
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-05-13T17:13:49.037+01:00[Europe/London]")
public class TextComponentSettings extends ComponentSettings {
  @SerializedName("colFromField")
  private Field colFromField = null;

  @SerializedName("colToField")
  private Field colToField = null;

  @SerializedName("lineFromField")
  private Field lineFromField = null;

  @SerializedName("lineToField")
  private Field lineToField = null;

  @SerializedName("modelVersion")
  private String modelVersion = null;

  @SerializedName("partNoField")
  private Field partNoField = null;

  @SerializedName("pipeline")
  private DocRef pipeline = null;

  @SerializedName("recordNoField")
  private Field recordNoField = null;

  @SerializedName("showAsHtml")
  private Boolean showAsHtml = null;

  @SerializedName("showStepping")
  private Boolean showStepping = null;

  @SerializedName("streamIdField")
  private Field streamIdField = null;

  @SerializedName("tableId")
  private String tableId = null;

  public TextComponentSettings colFromField(Field colFromField) {
    this.colFromField = colFromField;
    return this;
  }

   /**
   * Get colFromField
   * @return colFromField
  **/
  @Schema(description = "")
  public Field getColFromField() {
    return colFromField;
  }

  public void setColFromField(Field colFromField) {
    this.colFromField = colFromField;
  }

  public TextComponentSettings colToField(Field colToField) {
    this.colToField = colToField;
    return this;
  }

   /**
   * Get colToField
   * @return colToField
  **/
  @Schema(description = "")
  public Field getColToField() {
    return colToField;
  }

  public void setColToField(Field colToField) {
    this.colToField = colToField;
  }

  public TextComponentSettings lineFromField(Field lineFromField) {
    this.lineFromField = lineFromField;
    return this;
  }

   /**
   * Get lineFromField
   * @return lineFromField
  **/
  @Schema(description = "")
  public Field getLineFromField() {
    return lineFromField;
  }

  public void setLineFromField(Field lineFromField) {
    this.lineFromField = lineFromField;
  }

  public TextComponentSettings lineToField(Field lineToField) {
    this.lineToField = lineToField;
    return this;
  }

   /**
   * Get lineToField
   * @return lineToField
  **/
  @Schema(description = "")
  public Field getLineToField() {
    return lineToField;
  }

  public void setLineToField(Field lineToField) {
    this.lineToField = lineToField;
  }

  public TextComponentSettings modelVersion(String modelVersion) {
    this.modelVersion = modelVersion;
    return this;
  }

   /**
   * Get modelVersion
   * @return modelVersion
  **/
  @Schema(description = "")
  public String getModelVersion() {
    return modelVersion;
  }

  public void setModelVersion(String modelVersion) {
    this.modelVersion = modelVersion;
  }

  public TextComponentSettings partNoField(Field partNoField) {
    this.partNoField = partNoField;
    return this;
  }

   /**
   * Get partNoField
   * @return partNoField
  **/
  @Schema(description = "")
  public Field getPartNoField() {
    return partNoField;
  }

  public void setPartNoField(Field partNoField) {
    this.partNoField = partNoField;
  }

  public TextComponentSettings pipeline(DocRef pipeline) {
    this.pipeline = pipeline;
    return this;
  }

   /**
   * Get pipeline
   * @return pipeline
  **/
  @Schema(description = "")
  public DocRef getPipeline() {
    return pipeline;
  }

  public void setPipeline(DocRef pipeline) {
    this.pipeline = pipeline;
  }

  public TextComponentSettings recordNoField(Field recordNoField) {
    this.recordNoField = recordNoField;
    return this;
  }

   /**
   * Get recordNoField
   * @return recordNoField
  **/
  @Schema(description = "")
  public Field getRecordNoField() {
    return recordNoField;
  }

  public void setRecordNoField(Field recordNoField) {
    this.recordNoField = recordNoField;
  }

  public TextComponentSettings showAsHtml(Boolean showAsHtml) {
    this.showAsHtml = showAsHtml;
    return this;
  }

   /**
   * Get showAsHtml
   * @return showAsHtml
  **/
  @Schema(description = "")
  public Boolean isShowAsHtml() {
    return showAsHtml;
  }

  public void setShowAsHtml(Boolean showAsHtml) {
    this.showAsHtml = showAsHtml;
  }

  public TextComponentSettings showStepping(Boolean showStepping) {
    this.showStepping = showStepping;
    return this;
  }

   /**
   * Get showStepping
   * @return showStepping
  **/
  @Schema(description = "")
  public Boolean isShowStepping() {
    return showStepping;
  }

  public void setShowStepping(Boolean showStepping) {
    this.showStepping = showStepping;
  }

  public TextComponentSettings streamIdField(Field streamIdField) {
    this.streamIdField = streamIdField;
    return this;
  }

   /**
   * Get streamIdField
   * @return streamIdField
  **/
  @Schema(description = "")
  public Field getStreamIdField() {
    return streamIdField;
  }

  public void setStreamIdField(Field streamIdField) {
    this.streamIdField = streamIdField;
  }

  public TextComponentSettings tableId(String tableId) {
    this.tableId = tableId;
    return this;
  }

   /**
   * Get tableId
   * @return tableId
  **/
  @Schema(description = "")
  public String getTableId() {
    return tableId;
  }

  public void setTableId(String tableId) {
    this.tableId = tableId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TextComponentSettings textComponentSettings = (TextComponentSettings) o;
    return Objects.equals(this.colFromField, textComponentSettings.colFromField) &&
        Objects.equals(this.colToField, textComponentSettings.colToField) &&
        Objects.equals(this.lineFromField, textComponentSettings.lineFromField) &&
        Objects.equals(this.lineToField, textComponentSettings.lineToField) &&
        Objects.equals(this.modelVersion, textComponentSettings.modelVersion) &&
        Objects.equals(this.partNoField, textComponentSettings.partNoField) &&
        Objects.equals(this.pipeline, textComponentSettings.pipeline) &&
        Objects.equals(this.recordNoField, textComponentSettings.recordNoField) &&
        Objects.equals(this.showAsHtml, textComponentSettings.showAsHtml) &&
        Objects.equals(this.showStepping, textComponentSettings.showStepping) &&
        Objects.equals(this.streamIdField, textComponentSettings.streamIdField) &&
        Objects.equals(this.tableId, textComponentSettings.tableId) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(colFromField, colToField, lineFromField, lineToField, modelVersion, partNoField, pipeline, recordNoField, showAsHtml, showStepping, streamIdField, tableId, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TextComponentSettings {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    colFromField: ").append(toIndentedString(colFromField)).append("\n");
    sb.append("    colToField: ").append(toIndentedString(colToField)).append("\n");
    sb.append("    lineFromField: ").append(toIndentedString(lineFromField)).append("\n");
    sb.append("    lineToField: ").append(toIndentedString(lineToField)).append("\n");
    sb.append("    modelVersion: ").append(toIndentedString(modelVersion)).append("\n");
    sb.append("    partNoField: ").append(toIndentedString(partNoField)).append("\n");
    sb.append("    pipeline: ").append(toIndentedString(pipeline)).append("\n");
    sb.append("    recordNoField: ").append(toIndentedString(recordNoField)).append("\n");
    sb.append("    showAsHtml: ").append(toIndentedString(showAsHtml)).append("\n");
    sb.append("    showStepping: ").append(toIndentedString(showStepping)).append("\n");
    sb.append("    streamIdField: ").append(toIndentedString(streamIdField)).append("\n");
    sb.append("    tableId: ").append(toIndentedString(tableId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
