/*
 * Stroom API
 * Various APIs for interacting with Stroom and its data
 *
 * OpenAPI spec version: v1/v2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.ComponentResultRequest;
import io.swagger.client.model.DashboardQueryKey;
import io.swagger.client.model.Search;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * DashboardSearchRequest
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-05-13T17:13:49.037+01:00[Europe/London]")
public class DashboardSearchRequest {
  @SerializedName("componentResultRequests")
  private List<ComponentResultRequest> componentResultRequests = null;

  @SerializedName("dashboardQueryKey")
  private DashboardQueryKey dashboardQueryKey = null;

  @SerializedName("dateTimeLocale")
  private String dateTimeLocale = null;

  @SerializedName("search")
  private Search search = null;

  public DashboardSearchRequest componentResultRequests(List<ComponentResultRequest> componentResultRequests) {
    this.componentResultRequests = componentResultRequests;
    return this;
  }

  public DashboardSearchRequest addComponentResultRequestsItem(ComponentResultRequest componentResultRequestsItem) {
    if (this.componentResultRequests == null) {
      this.componentResultRequests = new ArrayList<ComponentResultRequest>();
    }
    this.componentResultRequests.add(componentResultRequestsItem);
    return this;
  }

   /**
   * Get componentResultRequests
   * @return componentResultRequests
  **/
  @Schema(description = "")
  public List<ComponentResultRequest> getComponentResultRequests() {
    return componentResultRequests;
  }

  public void setComponentResultRequests(List<ComponentResultRequest> componentResultRequests) {
    this.componentResultRequests = componentResultRequests;
  }

  public DashboardSearchRequest dashboardQueryKey(DashboardQueryKey dashboardQueryKey) {
    this.dashboardQueryKey = dashboardQueryKey;
    return this;
  }

   /**
   * Get dashboardQueryKey
   * @return dashboardQueryKey
  **/
  @Schema(description = "")
  public DashboardQueryKey getDashboardQueryKey() {
    return dashboardQueryKey;
  }

  public void setDashboardQueryKey(DashboardQueryKey dashboardQueryKey) {
    this.dashboardQueryKey = dashboardQueryKey;
  }

  public DashboardSearchRequest dateTimeLocale(String dateTimeLocale) {
    this.dateTimeLocale = dateTimeLocale;
    return this;
  }

   /**
   * Get dateTimeLocale
   * @return dateTimeLocale
  **/
  @Schema(description = "")
  public String getDateTimeLocale() {
    return dateTimeLocale;
  }

  public void setDateTimeLocale(String dateTimeLocale) {
    this.dateTimeLocale = dateTimeLocale;
  }

  public DashboardSearchRequest search(Search search) {
    this.search = search;
    return this;
  }

   /**
   * Get search
   * @return search
  **/
  @Schema(description = "")
  public Search getSearch() {
    return search;
  }

  public void setSearch(Search search) {
    this.search = search;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DashboardSearchRequest dashboardSearchRequest = (DashboardSearchRequest) o;
    return Objects.equals(this.componentResultRequests, dashboardSearchRequest.componentResultRequests) &&
        Objects.equals(this.dashboardQueryKey, dashboardSearchRequest.dashboardQueryKey) &&
        Objects.equals(this.dateTimeLocale, dashboardSearchRequest.dateTimeLocale) &&
        Objects.equals(this.search, dashboardSearchRequest.search);
  }

  @Override
  public int hashCode() {
    return Objects.hash(componentResultRequests, dashboardQueryKey, dateTimeLocale, search);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DashboardSearchRequest {\n");
    
    sb.append("    componentResultRequests: ").append(toIndentedString(componentResultRequests)).append("\n");
    sb.append("    dashboardQueryKey: ").append(toIndentedString(dashboardQueryKey)).append("\n");
    sb.append("    dateTimeLocale: ").append(toIndentedString(dateTimeLocale)).append("\n");
    sb.append("    search: ").append(toIndentedString(search)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
