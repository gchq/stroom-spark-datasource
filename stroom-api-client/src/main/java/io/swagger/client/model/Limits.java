/*
 * Stroom API
 * Various APIs for interacting with Stroom and its data
 *
 * OpenAPI spec version: v1/v2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Limits
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-05-13T17:13:49.037+01:00[Europe/London]")
public class Limits {
  @SerializedName("durationMs")
  private Long durationMs = null;

  @SerializedName("eventCount")
  private Long eventCount = null;

  @SerializedName("streamCount")
  private Long streamCount = null;

  public Limits durationMs(Long durationMs) {
    this.durationMs = durationMs;
    return this;
  }

   /**
   * Get durationMs
   * @return durationMs
  **/
  @Schema(description = "")
  public Long getDurationMs() {
    return durationMs;
  }

  public void setDurationMs(Long durationMs) {
    this.durationMs = durationMs;
  }

  public Limits eventCount(Long eventCount) {
    this.eventCount = eventCount;
    return this;
  }

   /**
   * Get eventCount
   * @return eventCount
  **/
  @Schema(description = "")
  public Long getEventCount() {
    return eventCount;
  }

  public void setEventCount(Long eventCount) {
    this.eventCount = eventCount;
  }

  public Limits streamCount(Long streamCount) {
    this.streamCount = streamCount;
    return this;
  }

   /**
   * Get streamCount
   * @return streamCount
  **/
  @Schema(description = "")
  public Long getStreamCount() {
    return streamCount;
  }

  public void setStreamCount(Long streamCount) {
    this.streamCount = streamCount;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Limits limits = (Limits) o;
    return Objects.equals(this.durationMs, limits.durationMs) &&
        Objects.equals(this.eventCount, limits.eventCount) &&
        Objects.equals(this.streamCount, limits.streamCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(durationMs, eventCount, streamCount);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Limits {\n");
    
    sb.append("    durationMs: ").append(toIndentedString(durationMs)).append("\n");
    sb.append("    eventCount: ").append(toIndentedString(eventCount)).append("\n");
    sb.append("    streamCount: ").append(toIndentedString(streamCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
