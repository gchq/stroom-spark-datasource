/*
 * Stroom API
 * Various APIs for interacting with Stroom and its data
 *
 * OpenAPI spec version: v1/v2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * GetScheduledTimesRequest
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-05-13T17:13:49.037+01:00[Europe/London]")
public class GetScheduledTimesRequest {
  /**
   * Gets or Sets jobType
   */
  @JsonAdapter(JobTypeEnum.Adapter.class)
  public enum JobTypeEnum {
    UNKNOWN("UNKNOWN"),
    CRON("CRON"),
    FREQUENCY("FREQUENCY"),
    DISTRIBUTED("DISTRIBUTED");

    private String value;

    JobTypeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static JobTypeEnum fromValue(String text) {
      for (JobTypeEnum b : JobTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<JobTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final JobTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public JobTypeEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return JobTypeEnum.fromValue(String.valueOf(value));
      }
    }
  }  @SerializedName("jobType")
  private JobTypeEnum jobType = null;

  @SerializedName("lastExecutedTime")
  private Long lastExecutedTime = null;

  @SerializedName("schedule")
  private String schedule = null;

  @SerializedName("scheduleReferenceTime")
  private Long scheduleReferenceTime = null;

  public GetScheduledTimesRequest jobType(JobTypeEnum jobType) {
    this.jobType = jobType;
    return this;
  }

   /**
   * Get jobType
   * @return jobType
  **/
  @Schema(description = "")
  public JobTypeEnum getJobType() {
    return jobType;
  }

  public void setJobType(JobTypeEnum jobType) {
    this.jobType = jobType;
  }

  public GetScheduledTimesRequest lastExecutedTime(Long lastExecutedTime) {
    this.lastExecutedTime = lastExecutedTime;
    return this;
  }

   /**
   * Get lastExecutedTime
   * @return lastExecutedTime
  **/
  @Schema(description = "")
  public Long getLastExecutedTime() {
    return lastExecutedTime;
  }

  public void setLastExecutedTime(Long lastExecutedTime) {
    this.lastExecutedTime = lastExecutedTime;
  }

  public GetScheduledTimesRequest schedule(String schedule) {
    this.schedule = schedule;
    return this;
  }

   /**
   * Get schedule
   * @return schedule
  **/
  @Schema(description = "")
  public String getSchedule() {
    return schedule;
  }

  public void setSchedule(String schedule) {
    this.schedule = schedule;
  }

  public GetScheduledTimesRequest scheduleReferenceTime(Long scheduleReferenceTime) {
    this.scheduleReferenceTime = scheduleReferenceTime;
    return this;
  }

   /**
   * Get scheduleReferenceTime
   * @return scheduleReferenceTime
  **/
  @Schema(description = "")
  public Long getScheduleReferenceTime() {
    return scheduleReferenceTime;
  }

  public void setScheduleReferenceTime(Long scheduleReferenceTime) {
    this.scheduleReferenceTime = scheduleReferenceTime;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetScheduledTimesRequest getScheduledTimesRequest = (GetScheduledTimesRequest) o;
    return Objects.equals(this.jobType, getScheduledTimesRequest.jobType) &&
        Objects.equals(this.lastExecutedTime, getScheduledTimesRequest.lastExecutedTime) &&
        Objects.equals(this.schedule, getScheduledTimesRequest.schedule) &&
        Objects.equals(this.scheduleReferenceTime, getScheduledTimesRequest.scheduleReferenceTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(jobType, lastExecutedTime, schedule, scheduleReferenceTime);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetScheduledTimesRequest {\n");
    
    sb.append("    jobType: ").append(toIndentedString(jobType)).append("\n");
    sb.append("    lastExecutedTime: ").append(toIndentedString(lastExecutedTime)).append("\n");
    sb.append("    schedule: ").append(toIndentedString(schedule)).append("\n");
    sb.append("    scheduleReferenceTime: ").append(toIndentedString(scheduleReferenceTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
