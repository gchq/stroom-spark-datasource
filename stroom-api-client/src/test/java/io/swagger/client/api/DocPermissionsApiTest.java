/*
 * Stroom API
 * Various APIs for interacting with Stroom and its data
 *
 * OpenAPI spec version: v1/v2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.ChangeDocumentPermissionsRequest;
import io.swagger.client.model.CheckDocumentPermissionRequest;
import io.swagger.client.model.CopyPermissionsFromParentRequest;
import io.swagger.client.model.DocumentPermissions;
import io.swagger.client.model.FetchAllDocumentPermissionsRequest;
import io.swagger.client.model.FilterUsersRequest;
import io.swagger.client.model.User;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DocPermissionsApi
 */
@Ignore
public class DocPermissionsApiTest {

    private final DocPermissionsApi api = new DocPermissionsApi();

    /**
     * Change document permissions
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void changeDocumentPermissionsTest() throws ApiException {
        ChangeDocumentPermissionsRequest body = null;
        Boolean response = api.changeDocumentPermissions(body);

        // TODO: test validations
    }
    /**
     * Check document permission
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void checkDocumentPermissionTest() throws ApiException {
        CheckDocumentPermissionRequest body = null;
        Boolean response = api.checkDocumentPermission(body);

        // TODO: test validations
    }
    /**
     * Copy permissions from parent
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void copyPermissionFromParentTest() throws ApiException {
        CopyPermissionsFromParentRequest body = null;
        DocumentPermissions response = api.copyPermissionFromParent(body);

        // TODO: test validations
    }
    /**
     * Fetch document permissions
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchAllDocumentPermissionsTest() throws ApiException {
        FetchAllDocumentPermissionsRequest body = null;
        DocumentPermissions response = api.fetchAllDocumentPermissions(body);

        // TODO: test validations
    }
    /**
     * Get all permissions for a given document type
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void filterUsersTest() throws ApiException {
        FilterUsersRequest body = null;
        List<User> response = api.filterUsers(body);

        // TODO: test validations
    }
    /**
     * Get all permissions for a given document type
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getPermissionForDocTypeTest() throws ApiException {
        String docType = null;
        List<String> response = api.getPermissionForDocType(docType);

        // TODO: test validations
    }
}
