/*
 * Stroom API
 * Various APIs for interacting with Stroom and its data
 *
 * OpenAPI spec version: v1/v2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.ChangeUserRequest;
import io.swagger.client.model.PermissionChangeRequest;
import io.swagger.client.model.User;
import io.swagger.client.model.UserAndPermissions;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ApplicationPermissionsApi
 */
@Ignore
public class ApplicationPermissionsApiTest {

    private final ApplicationPermissionsApi api = new ApplicationPermissionsApi();

    /**
     * User and app permissions for the current session
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void changeUserPermissionsTest() throws ApiException {
        ChangeUserRequest body = null;
        Boolean response = api.changeUserPermissions(body);

        // TODO: test validations
    }
    /**
     * Get all possible permissions
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchAllPermissionsTest() throws ApiException {
        List<String> response = api.fetchAllPermissions();

        // TODO: test validations
    }
    /**
     * User and app permissions for the specified user
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchUserAppPermissionsTest() throws ApiException {
        User body = null;
        UserAndPermissions response = api.fetchUserAppPermissions(body);

        // TODO: test validations
    }
    /**
     * Fires a permission change event
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void firePermissionChangeEventTest() throws ApiException {
        PermissionChangeRequest body = null;
        String nodeName = null;
        Boolean response = api.firePermissionChangeEvent(body, nodeName);

        // TODO: test validations
    }
    /**
     * User and app permissions for the current session
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getUserAndPermissionsTest() throws ApiException {
        UserAndPermissions response = api.getUserAndPermissions();

        // TODO: test validations
    }
}
