/*
 * Stroom API
 * Various APIs for interacting with Stroom and its data
 *
 * OpenAPI spec version: v1/v2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.BulkActionResult;
import io.swagger.client.model.DocRef;
import io.swagger.client.model.DocRefInfo;
import io.swagger.client.model.DocumentTypes;
import io.swagger.client.model.ExplorerNode;
import io.swagger.client.model.ExplorerNodePermissions;
import io.swagger.client.model.ExplorerServiceCopyRequest;
import io.swagger.client.model.ExplorerServiceCreateRequest;
import io.swagger.client.model.ExplorerServiceDeleteRequest;
import io.swagger.client.model.ExplorerServiceMoveRequest;
import io.swagger.client.model.ExplorerServiceRenameRequest;
import io.swagger.client.model.FetchExplorerNodeResult;
import io.swagger.client.model.FindExplorerNodeCriteria;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ExplorerV2Api
 */
@Ignore
public class ExplorerV2ApiTest {

    private final ExplorerV2Api api = new ExplorerV2Api();

    /**
     * Copy explorer items
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void copyExplorerItemsTest() throws ApiException {
        ExplorerServiceCopyRequest body = null;
        BulkActionResult response = api.copyExplorerItems(body);

        // TODO: test validations
    }
    /**
     * Create explorer item
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createExplorerItemTest() throws ApiException {
        ExplorerServiceCreateRequest body = null;
        DocRef response = api.createExplorerItem(body);

        // TODO: test validations
    }
    /**
     * Delete explorer items
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteExplorerItemsTest() throws ApiException {
        ExplorerServiceDeleteRequest body = null;
        BulkActionResult response = api.deleteExplorerItems(body);

        // TODO: test validations
    }
    /**
     * Fetch document references
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchExplorerDocRefsTest() throws ApiException {
        List<DocRef> body = null;
        List<DocRef> response = api.fetchExplorerDocRefs(body);

        // TODO: test validations
    }
    /**
     * Fetch document types
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchExplorerDocumentTypesTest() throws ApiException {
        DocumentTypes response = api.fetchExplorerDocumentTypes();

        // TODO: test validations
    }
    /**
     * Get document info
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchExplorerItemInfoTest() throws ApiException {
        DocRef body = null;
        DocRefInfo response = api.fetchExplorerItemInfo(body);

        // TODO: test validations
    }
    /**
     * Fetch explorer nodes
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchExplorerNodesTest() throws ApiException {
        FindExplorerNodeCriteria body = null;
        FetchExplorerNodeResult response = api.fetchExplorerNodes(body);

        // TODO: test validations
    }
    /**
     * Fetch permissions for explorer items
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchExplorerPermissionsTest() throws ApiException {
        List<ExplorerNode> body = null;
        List<ExplorerNodePermissions> response = api.fetchExplorerPermissions(body);

        // TODO: test validations
    }
    /**
     * Move explorer items
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void moveExplorerItemsTest() throws ApiException {
        ExplorerServiceMoveRequest body = null;
        BulkActionResult response = api.moveExplorerItems(body);

        // TODO: test validations
    }
    /**
     * Rename explorer items
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void renameExplorerItemsTest() throws ApiException {
        ExplorerServiceRenameRequest body = null;
        DocRef response = api.renameExplorerItems(body);

        // TODO: test validations
    }
}
