/*
 * Stroom API
 * Various APIs for interacting with Stroom and its data
 *
 * OpenAPI spec version: v1/v2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.AbstractFetchDataResult;
import io.swagger.client.model.DataInfoSection;
import io.swagger.client.model.FetchDataRequest;
import io.swagger.client.model.FindMetaCriteria;
import io.swagger.client.model.ResourceGeneration;
import io.swagger.client.model.ResourceKey;
import io.swagger.client.model.UploadDataRequest;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DataApi
 */
@Ignore
public class DataApiTest {

    private final DataApi api = new DataApi();

    /**
     * Download matching data
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void downloadDataTest() throws ApiException {
        FindMetaCriteria body = null;
        ResourceGeneration response = api.downloadData(body);

        // TODO: test validations
    }
    /**
     * Fetch matching data
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchDataTest() throws ApiException {
        FetchDataRequest body = null;
        AbstractFetchDataResult response = api.fetchData(body);

        // TODO: test validations
    }
    /**
     * List child types for a stream
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getChildStreamTypesTest() throws ApiException {
        Long id = null;
        Long partNo = null;
        List<String> response = api.getChildStreamTypes(id, partNo);

        // TODO: test validations
    }
    /**
     * Upload data
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void uploadDataTest() throws ApiException {
        UploadDataRequest body = null;
        ResourceKey response = api.uploadData(body);

        // TODO: test validations
    }
    /**
     * Find full info about a data item
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void viewDataInfoTest() throws ApiException {
        Long id = null;
        List<DataInfoSection> response = api.viewDataInfo(id);

        // TODO: test validations
    }
}
