/*
 * Stroom API
 * Various APIs for interacting with Stroom and its data
 *
 * OpenAPI spec version: v1/v2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.RefDataLookupRequest;
import io.swagger.client.model.RefStoreEntry;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ReferenceDataApi
 */
@Ignore
public class ReferenceDataApiTest {

    private final ReferenceDataApi api = new ReferenceDataApi();

    /**
     * List entries from the reference data store on the node called.
     *
     * This is primarily intended  for small scale debugging in non-production environments. If no limit is set a default limit is applied else the results will be limited to limit entries.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getReferenceStoreEntriesTest() throws ApiException {
        Integer limit = null;
        List<RefStoreEntry> response = api.getReferenceStoreEntries(limit);

        // TODO: test validations
    }
    /**
     * Perform a reference data lookup using the supplied lookup request.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void lookupReferenceDataTest() throws ApiException {
        RefDataLookupRequest body = null;
        String response = api.lookupReferenceData(body);

        // TODO: test validations
    }
    /**
     * Explicitly delete all entries that are older than purgeAge.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void purgeReferenceDataTest() throws ApiException {
        String purgeAge = null;
        Boolean response = api.purgeReferenceData(purgeAge);

        // TODO: test validations
    }
}
