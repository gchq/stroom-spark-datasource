/*
 * Stroom API
 * Various APIs for interacting with Stroom and its data
 *
 * OpenAPI spec version: v1/v2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.FindUserCriteria;
import io.swagger.client.model.ResultPageUser;
import io.swagger.client.model.User;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AuthorisationApi
 */
@Ignore
public class AuthorisationApiTest {

    private final AuthorisationApi api = new AuthorisationApi();

    /**
     * Adds user with UUID userUuid to the group with UUID groupUuid
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addUserToGroupTest() throws ApiException {
        String userUuid = null;
        String groupUuid = null;
        Boolean response = api.addUserToGroup(userUuid, groupUuid);

        // TODO: test validations
    }
    /**
     * Creates a user or group with the supplied name
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createUserTest() throws ApiException {
        String name = null;
        Boolean isGroup = null;
        User response = api.createUser(name, isGroup);

        // TODO: test validations
    }
    /**
     * Deletes the user with the supplied UUID
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteUserTest() throws ApiException {
        String uuid = null;
        Boolean response = api.deleteUser(uuid);

        // TODO: test validations
    }
    /**
     * Fetches the user with the supplied UUID
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchUserTest() throws ApiException {
        String userUuid = null;
        User response = api.fetchUser(userUuid);

        // TODO: test validations
    }
    /**
     * Find the users matching the supplied criteria
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void findUsersTest() throws ApiException {
        String name = null;
        Boolean isGroup = null;
        String uuid = null;
        List<User> response = api.findUsers(name, isGroup, uuid);

        // TODO: test validations
    }
    /**
     * Find the users matching the supplied criteria
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void findUsersByCriteriaTest() throws ApiException {
        FindUserCriteria body = null;
        ResultPageUser response = api.findUsersByCriteria(body);

        // TODO: test validations
    }
    /**
     * Gets a list of associated users
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAssociatedUsersTest() throws ApiException {
        String filter = null;
        List<String> response = api.getAssociatedUsers(filter);

        // TODO: test validations
    }
    /**
     * Removes user with UUID userUuid from the group with UUID groupUuid
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void removeUserFromGroupTest() throws ApiException {
        String userUuid = null;
        String groupUuid = null;
        Boolean response = api.removeUserFromGroup(userUuid, groupUuid);

        // TODO: test validations
    }
    /**
     * Enables/disables the Stroom user with the supplied username
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void setUserStatusTest() throws ApiException {
        String userName = null;
        Boolean enabled = null;
        Boolean response = api.setUserStatus(userName, enabled);

        // TODO: test validations
    }
}
