/*
 * Stroom API
 * Various APIs for interacting with Stroom and its data
 *
 * OpenAPI spec version: v1/v2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.ConfigProperty;
import io.swagger.client.model.GlobalConfigCriteria;
import io.swagger.client.model.ListConfigResponse;
import io.swagger.client.model.OverrideValueString;
import io.swagger.client.model.UiConfig;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for GlobalConfigApi
 */
@Ignore
public class GlobalConfigApiTest {

    private final GlobalConfigApi api = new GlobalConfigApi();

    /**
     * Create a configuration property
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createConfigPropertyTest() throws ApiException {
        ConfigProperty body = null;
        ConfigProperty response = api.createConfigProperty(body);

        // TODO: test validations
    }
    /**
     * Fetch the UI configuration
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchUiConfigTest() throws ApiException {
        UiConfig response = api.fetchUiConfig();

        // TODO: test validations
    }
    /**
     * Fetch a property by its name, e.g. &#x27;stroom.path.home&#x27;
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getConfigPropertyByNameTest() throws ApiException {
        String propertyName = null;
        ConfigProperty response = api.getConfigPropertyByName(propertyName);

        // TODO: test validations
    }
    /**
     * Get the property value from the YAML configuration in the specified node.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getConfigYamlValueByNodeAndNameTest() throws ApiException {
        String propertyName = null;
        String nodeName = null;
        OverrideValueString response = api.getConfigYamlValueByNodeAndName(propertyName, nodeName);

        // TODO: test validations
    }
    /**
     * List all properties matching the criteria on the current node.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listConfigPropertiesTest() throws ApiException {
        GlobalConfigCriteria body = null;
        ListConfigResponse response = api.listConfigProperties(body);

        // TODO: test validations
    }
    /**
     * List all properties matching the criteria on the requested node.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listConfigPropertiesByNodeTest() throws ApiException {
        GlobalConfigCriteria body = null;
        String nodeName = null;
        ListConfigResponse response = api.listConfigPropertiesByNode(body, nodeName);

        // TODO: test validations
    }
    /**
     * Update a configuration property
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateConfigPropertyTest() throws ApiException {
        ConfigProperty body = null;
        String propertyName = null;
        ConfigProperty response = api.updateConfigProperty(body, propertyName);

        // TODO: test validations
    }
}
